{"version":3,"sources":["main.js","require.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","h","f","Error","s","done","method","arg","delegate","maybeInvokeDelegate","TypeError","y","tryCatch","type","resultName","next","nextLoc","sent","_sent","dispatchException","abrupt","p","l","call","GeneratorFunction","GeneratorFunctionPrototype","d","this","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","callInvokeWithMethodAndArg","invoke","_typeof","resolve","__await","then","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_createForOfIteratorHelper","_n","Array","isArray","_unsupportedIterableToArray","F","_arrayLikeToArray","toString","from","test","hoursCellArray","document","getElementsByClassName","minutesCellArray","secondsCellArray","now","nowHours","getHours","nowMinutes","getMinutes","nowSeconds","getSeconds","secondsToMidnight","_iterator","_step","textContent","hoursToMidnight","String","_step2","_iterator2","minutesToMidnight","err","_step3","_iterator3","setTimeout","showTimeToMidnight","sliderBlock","querySelector","arrowsBlock","clickHandler","event","leftCoordinate","Number","sliderRow","style","left","dotsLiveCollection","dotActiveNowElement","numberActiveElementNow","indexOf","nextNumberActiveElement","contains","removeActiveClass","acitveElement","widthSliderCell","target","classList","add","sendEmailTelegram","_x","_sendEmailTelegram","_callee2","fetch","app","port","form","formBtn","phone","dataStrFromSite","_context2","preventDefault","express","require","config","process","env","PORT","use","json","formData","FormData","fromDataObject","fromEntries","entries","concat","post","_ref","_callee","req","res","url","response","_context","token","TELEGRAM_TOKEN","TELEGRAM_CHAT_ID","Content-Type","body","JSON","chat_id","text","ok","alert","chatId","_x2","_x3","error","console","listen","log","requirejs","global","head","baseElement","dataMain","src","mainScript","subPath","version","cjsRequireRegExp","jsSuffixRegExp","ostring","op","interactiveScript","currentlyAddingScript","window","navigator","isBrowser","importScripts","platform","defContextName","hasOwn","opera","isWebWorker","globalDefQueue","useInteractive","disallowedProps","match","singlePrefix","isOpera","cfg","isFunction","it","func","ary","eachReverse","hasProp","prop","getOwn","obj","eachProp","mixin","source","force","deepStringMixin","bind","fn","scripts","getElementsByTagName","defaultOnError","getGlobal","split","part","makeError","id","msg","requireModules","requireType","originalError","undefined","deps","callback","errback","optional","contextName","attachEvent","context","contexts","newContext","configure","onNodeCreated","nextTick","insertBefore","jsExtRegExp","each","script","readyState","ctx","parentNode","onError","createNode","moduleName","node","baseUrl","xhtml","createElementNS","createElement","load","setAttribute","onScriptLoad","addEventListener","onScriptError","appendChild","defQueue","defQueueMap","completeLoad","eval","skipDataMain","getAttribute","join","replace","commentRegExp","commentReplace","dep","getInteractiveScript","amd","jQuery","exec","Module","handlers","checkLoadedTimeoutId","waitSeconds","paths","bundles","pkgs","shim","registry","enabledRegistry","undefEvents","defined","urlFetched","bundlesMap","requireCounter","normalize","baseName","applyMap","j","nameSegment","pkgMain","foundI","foundStarMap","starI","baseParts","nameParts","map","starMap","lastIndex","trimDots","splice","outerLoop","normalizedBaseParts","mapValue","foundMap","removeScript","scriptNode","removeChild","hasPathFallback","pathConfig","shift","undef","makeRequire","skipMap","splitPrefix","index","prefix","substring","makeModuleMap","parentModuleMap","isNormalized","pluginModule","originalName","normalizedName","unnormalized","isDefine","parentName","nameToUrl","parentMap","suffix","unnormalizedCounter","getModule","depMap","mod","defineEmitComplete","on","ids","notified","events","takeGlobalQueue","emit","queueItem","exports","cleanRegistry","depMatched","depId","checkLoaded","usingPathFallback","waitInterval","expired","startTime","Date","getTime","noLoads","reqCalls","needCycleCheck","inCheckLoaded","modId","inited","enabled","stillLoading","fetched","depExports","breakCycle","traced","processed","depMaps","defineDep","check","init","options","callGetModule","args","removeListener","ieName","urlArgs","detachEvent","removeEventListener","evt","currentTarget","srcElement","intakeDefines","uri","usingExports","module","factory","pluginMaps","enable","ignore","depCount","callPlugin","defining","enabling","resLoadMaps","cjsModule","requireMap","normalizedMap","onResourceLoad","execCb","defineEmitted","enableBuildCallback","normalizedMod","pluginMap","plugin","bundleId","localRequire","moduleMap","fromText","textAlt","hasInteractive","handler","undefed","getScriptData","cb","packages","location","pkgObj","objs","makeShimExports","ret","__requireJsBuild","relMap","exportsFn","main","currDirRegExp","toUrl","moduleNamePlusExt","segment","isRelative","specified","requireMod","get","ext","lastIndexOf","syms","parentPath","found","shExports","readyRegExp","data","skipExt","parents","key","scriptType"],"mappings":"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","file":"main.min.js","sourcesContent":["/**\r\n * TIMER\r\n */\r\nlet hoursCellArray = document.getElementsByClassName('hours');\r\nlet minutesCellArray = document.getElementsByClassName('minutes');\r\nlet secondsCellArray = document.getElementsByClassName('seconds');\r\n\r\nfunction showTimeToMidnight() {\r\n    let now = new Date();\r\n    let nowHours = now.getHours();\r\n    let nowMinutes = now.getMinutes();\r\n    let nowSeconds = now.getSeconds();\r\n\r\n    let hoursToMidnight = 0;\r\n    let minutesToMidnight = 0;\r\n    let secondsToMidnight = 0;\r\n\r\n    // Get hours to midnight\r\n    function getHoursToMidnight() {\r\n        if (nowMinutes === 0 && nowSeconds === 0) {\r\n            hoursToMidnight = 24 - nowHours;\r\n        } else {\r\n            hoursToMidnight = 23 - nowHours;\r\n        }\r\n        hoursToMidnight = String(hoursToMidnight);\r\n        return hoursToMidnight.length === 2 ? hoursToMidnight : '0' + hoursToMidnight;\r\n    }\r\n\r\n    // Get minutes to midnight\r\n    function getMinutesToMidnight() {\r\n        if (nowMinutes === 0 && nowSeconds === 0) {\r\n            minutesToMidnight = 0;\r\n        } else {\r\n            minutesToMidnight = 59 - nowMinutes;\r\n        }\r\n        minutesToMidnight = String(minutesToMidnight);\r\n        return minutesToMidnight.length === 2 ? minutesToMidnight : '0' + minutesToMidnight;\r\n    }\r\n\r\n    // Get seconds to midnight\r\n    function getSecondsToMidnight() {\r\n        if (nowSeconds === 0) {\r\n            secondsToMidnight = 0;\r\n        } else {\r\n            secondsToMidnight = 60 - nowSeconds;\r\n        }\r\n        secondsToMidnight = String(secondsToMidnight);\r\n        return secondsToMidnight.length === 2 ? secondsToMidnight : '0' + secondsToMidnight;\r\n    }\r\n\r\n    // Update timer cells\r\n    for (let item of hoursCellArray) {\r\n        item.textContent = getHoursToMidnight();\r\n    }\r\n    for (let item of minutesCellArray) {\r\n        item.textContent = getMinutesToMidnight();\r\n    }\r\n    for (let item of secondsCellArray) {\r\n        item.textContent = getSecondsToMidnight();\r\n    }\r\n    // console.log(`${getHoursToMidnight()}:${getMinutesToMidnight()}:${getSecondsToMidnight()}`);\r\n    setTimeout(showTimeToMidnight, 200);\r\n}\r\n\r\nshowTimeToMidnight();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * \r\n * \r\n * - - - SLIDER - - -\r\n * \r\n * \r\n */\r\nlet sliderBlock = document.querySelector('.slider');\r\nlet sliderRow = document.querySelector('.slider__row');\r\nlet arrowsBlock = document.querySelector('.slider__arrows');\r\nlet widthSliderCell = 440;\r\nsliderRow.style.left = '-440px';\r\n\r\nfunction clickHandler(event) {\r\n    let leftCoordinate = Number(sliderRow.style.left.slice(0, -2))\r\n    let dotsLiveCollection = sliderBlock.getElementsByClassName('slider-dots__item');\r\n    let dotActiveNowElement = sliderBlock.getElementsByClassName('slider-dots__item_active')[0];\r\n    let numberActiveElementNow = Array.from(dotsLiveCollection).indexOf(dotActiveNowElement);\r\n    let nextNumberActiveElement = 0;\r\n\r\n    function removeActiveClass(acitveElement) {\r\n        acitveElement.classList.remove('slider-dots__item_active');\r\n    }\r\n\r\n    removeActiveClass(dotActiveNowElement);\r\n    // Processing click on left arrow\r\n    if (event.target.classList.contains('slider__arrows_left')) {\r\n        if (leftCoordinate === 0) {\r\n            nextNumberActiveElement = (dotsLiveCollection.length) - 1;\r\n            sliderRow.style.left = '-880px';\r\n        } else  {\r\n            nextNumberActiveElement = numberActiveElementNow - 1;\r\n            sliderRow.style.left = (leftCoordinate + widthSliderCell) + 'px';\r\n        }\r\n    }\r\n    // Processing click on right arrow\r\n    if (event.target.classList.contains('slider__arrows_right')) {\r\n        if (leftCoordinate === -880) {\r\n            sliderRow.style.left = '0px';\r\n            nextNumberActiveElement = 0;\r\n        } else  {\r\n            nextNumberActiveElement = numberActiveElementNow + 1;\r\n            sliderRow.style.left = (leftCoordinate - widthSliderCell) + 'px';\r\n        }\r\n    }\r\n    dotsLiveCollection[nextNumberActiveElement].classList.add('slider-dots__item_active');\r\n}\r\n\r\nsliderBlock.addEventListener('click', clickHandler);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nasync function sendEmailTelegram(event) {\r\n    event.preventDefault();\r\n\r\n    const express = require('express');\r\n    const fetch = require('node-fetch');\r\n    require('dotenv').config();\r\n    const app = express();\r\n    const port = process.env.PORT || 3000;\r\n\r\n    app.use(express.json());\r\n\r\n    const form = event.target;\r\n    const formBtn = document.querySelector('#form-order #order-button');\r\n    // Оборачиваем в обёртку нашу форму\r\n    const formData = new FormData(form);\r\n    // Получаем данные в виде объекта\r\n    const fromDataObject = Object.fromEntries(formData.entries());\r\n\r\n    const { name, phone } = fromDataObject;\r\n    const dataStrFromSite = `Ім'я покупця: ${name} Номер телефона: ${phone}`;\r\n\r\n    try {\r\n        formBtn.textContent = 'Не закривайте цю сторінку, доки надсилаються дані...'\r\n\r\n        app.post('/sendMessage', async (req, res) => {\r\n            const token = process.env.TELEGRAM_TOKEN;\r\n            const chatId = process.env.TELEGRAM_CHAT_ID;\r\n            // const { message } = req.body;\r\n\r\n            // if (!message) {\r\n            //     return res.status(400).json({ error: 'Message is required' });\r\n            // }\r\n\r\n            const url = `https://api.telegram.org/bot${token}/sendMessage`;\r\n            const response = await fetch(url,\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        chat_id: TELEGRAM_CHAT_ID,\r\n                        text: dataStrFromSite\r\n                    })\r\n                }\r\n            );\r\n            \r\n            if (response.ok) {\r\n                alert('Дякуємо! Ваше замовлення прийнято. Ми зв`яжемось з Вами найближчим часом.');\r\n                // Чистим форму\r\n                form.reset();\r\n            } else {\r\n                // Создаём ошибку и передаём её объект ответа с ошибкой.\r\n                // Дальше эта ошибка перейдёт в блок catch(error) где её можно обработать\r\n                throw new Error(response.statusText)\r\n            }\r\n        });\r\n    } catch (error) {\r\n        console.error();\r\n        alert('Нажаль ми не отримали Ваші дані. Будь-ласка, знову введіть Ваші дані та натисність на кноку \"ОФОРМИТИ ЗАМОВЛЕННЯ\".');\r\n    } finally {\r\n        formBtn.textContent = 'ОФОРМИТИ ЗАМОВЛЕННЯ';\r\n    }\r\n\r\n    app.listen(port, () => {\r\n        console.log(`Server is running on port ${port}`);\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * \r\n * \r\n * - - - FORM VALIDATION - - -\r\n * \r\n * \r\n */\r\n// let form = document.getElementById('form-order');\r\n\r\n\r\n// function validation(form) {\r\n//     let result = true;\r\n//     const arrInputs = form.querySelectorAll('input'); // array of input tags\r\n\r\n\r\n//     function removeError(input) {\r\n//         const parentOfInput = input.parentNode;\r\n//         if (parentOfInput.classList.contains('error')) {\r\n//             parentOfInput.querySelector('.error-label').remove();\r\n//             parentOfInput.classList.remove('error');\r\n//         }\r\n//     }\r\n    \r\n\r\n//     function createError(input, text) {\r\n//         const parentOfInput = input.parentNode;\r\n//         const errorLabel = document.createElement('label');\r\n//         errorLabel.classList.add('error-label');\r\n//         errorLabel.textContent = text + input.placeholder[0].toLowerCase() + input.placeholder.slice(1);\r\n        \r\n//         parentOfInput.classList.add('error');\r\n//         parentOfInput.append(errorLabel);\r\n//     }\r\n\r\n//     arrInputs.forEach( input => {\r\n//         removeError(input);\r\n\r\n//         if (input.value === '') {\r\n//             createError(input, 'Будь-ласка, ');\r\n//             result = false;\r\n//         }\r\n//     })\r\n\r\n//     return result;\r\n// }\r\n\r\n// function handlerForm(event) {\r\n//     event.preventDefault();\r\n//     // validation(this) // \"this\" - это тег form, форма которую мы обрабатываем\r\n//     alert('The form has been validated in HTML.')\r\n\r\n//     // if (validation(this) === true) {\r\n//     //     // Скорее всего в этом блоке нужно будет передавать данные в Телеграм\r\n//     //     alert('The form has been validated.');\r\n//     // }\r\n// }\r\n\r\n// form.addEventListener('submit', handlerForm);\r\n\r\n","/** vim: et:ts=4:sw=4:sts=4\n * @license RequireJS 2.3.7 Copyright jQuery Foundation and other contributors.\n * Released under MIT license, https://github.com/requirejs/requirejs/blob/master/LICENSE\n */\n//Not using strict: uneven strict support in browsers, #392, and causes\n//problems with requirejs.exec()/transpiler plugins that may not be strict.\n/*jslint regexp: true, nomen: true, sloppy: true */\n/*global window, navigator, document, importScripts, setTimeout, opera */\n\nvar requirejs, require, define;\n(function (global, setTimeout) {\n    var req, s, head, baseElement, dataMain, src,\n        interactiveScript, currentlyAddingScript, mainScript, subPath,\n        version = '2.3.7',\n        commentRegExp = /\\/\\*[\\s\\S]*?\\*\\/|([^:\"'=]|^)\\/\\/.*$/mg,\n        cjsRequireRegExp = /[^.]\\s*require\\s*\\(\\s*[\"']([^'\"\\s]+)[\"']\\s*\\)/g,\n        jsSuffixRegExp = /\\.js$/,\n        currDirRegExp = /^\\.\\//,\n        op = Object.prototype,\n        ostring = op.toString,\n        hasOwn = op.hasOwnProperty,\n        isBrowser = !!(typeof window !== 'undefined' && typeof navigator !== 'undefined' && window.document),\n        isWebWorker = !isBrowser && typeof importScripts !== 'undefined',\n        //PS3 indicates loaded and complete, but need to wait for complete\n        //specifically. Sequence is 'loading', 'loaded', execution,\n        // then 'complete'. The UA check is unfortunate, but not sure how\n        //to feature test w/o causing perf issues.\n        readyRegExp = isBrowser && navigator.platform === 'PLAYSTATION 3' ?\n                      /^complete$/ : /^(complete|loaded)$/,\n        defContextName = '_',\n        //Oh the tragedy, detecting opera. See the usage of isOpera for reason.\n        isOpera = typeof opera !== 'undefined' && opera.toString() === '[object Opera]',\n        contexts = {},\n        cfg = {},\n        globalDefQueue = [],\n        useInteractive = false,\n        disallowedProps = ['__proto__', 'constructor'];\n\n    //Could match something like ')//comment', do not lose the prefix to comment.\n    function commentReplace(match, singlePrefix) {\n        return singlePrefix || '';\n    }\n\n    function isFunction(it) {\n        return ostring.call(it) === '[object Function]';\n    }\n\n    function isArray(it) {\n        return ostring.call(it) === '[object Array]';\n    }\n\n    /**\n     * Helper function for iterating over an array. If the func returns\n     * a true value, it will break out of the loop.\n     */\n    function each(ary, func) {\n        if (ary) {\n            var i;\n            for (i = 0; i < ary.length; i += 1) {\n                if (ary[i] && func(ary[i], i, ary)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Helper function for iterating over an array backwards. If the func\n     * returns a true value, it will break out of the loop.\n     */\n    function eachReverse(ary, func) {\n        if (ary) {\n            var i;\n            for (i = ary.length - 1; i > -1; i -= 1) {\n                if (ary[i] && func(ary[i], i, ary)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    function getOwn(obj, prop) {\n        return hasProp(obj, prop) && obj[prop];\n    }\n\n    /**\n     * Cycles over properties in an object and calls a function for each\n     * property value. If the function returns a truthy value, then the\n     * iteration is stopped.\n     */\n    function eachProp(obj, func) {\n        var prop;\n        for (prop in obj) {\n            if (hasProp(obj, prop) && disallowedProps.indexOf(prop) == -1) {\n                if (func(obj[prop], prop)) {\n                    break;\n                }\n            }\n        }\n    }\n\n    /**\n     * Simple function to mix in properties from source into target,\n     * but only if target does not already have a property of the same name.\n     */\n    function mixin(target, source, force, deepStringMixin) {\n        if (source) {\n            eachProp(source, function (value, prop) {\n                if (force || !hasProp(target, prop)) {\n                    if (deepStringMixin && typeof value === 'object' && value &&\n                        !isArray(value) && !isFunction(value) &&\n                        !(value instanceof RegExp)) {\n\n                        if (!target[prop]) {\n                            target[prop] = {};\n                        }\n                        mixin(target[prop], value, force, deepStringMixin);\n                    } else {\n                        target[prop] = value;\n                    }\n                }\n            });\n        }\n        return target;\n    }\n\n    //Similar to Function.prototype.bind, but the 'this' object is specified\n    //first, since it is easier to read/figure out what 'this' will be.\n    function bind(obj, fn) {\n        return function () {\n            return fn.apply(obj, arguments);\n        };\n    }\n\n    function scripts() {\n        return document.getElementsByTagName('script');\n    }\n\n    function defaultOnError(err) {\n        throw err;\n    }\n\n    //Allow getting a global that is expressed in\n    //dot notation, like 'a.b.c'.\n    function getGlobal(value) {\n        if (!value) {\n            return value;\n        }\n        var g = global;\n        each(value.split('.'), function (part) {\n            g = g[part];\n        });\n        return g;\n    }\n\n    /**\n     * Constructs an error with a pointer to an URL with more information.\n     * @param {String} id the error ID that maps to an ID on a web page.\n     * @param {String} message human readable error.\n     * @param {Error} [err] the original error, if there is one.\n     *\n     * @returns {Error}\n     */\n    function makeError(id, msg, err, requireModules) {\n        var e = new Error(msg + '\\nhttps://requirejs.org/docs/errors.html#' + id);\n        e.requireType = id;\n        e.requireModules = requireModules;\n        if (err) {\n            e.originalError = err;\n        }\n        return e;\n    }\n\n    if (typeof define !== 'undefined') {\n        //If a define is already in play via another AMD loader,\n        //do not overwrite.\n        return;\n    }\n\n    if (typeof requirejs !== 'undefined') {\n        if (isFunction(requirejs)) {\n            //Do not overwrite an existing requirejs instance.\n            return;\n        }\n        cfg = requirejs;\n        requirejs = undefined;\n    }\n\n    //Allow for a require config object\n    if (typeof require !== 'undefined' && !isFunction(require)) {\n        //assume it is a config object.\n        cfg = require;\n        require = undefined;\n    }\n\n    function newContext(contextName) {\n        var inCheckLoaded, Module, context, handlers,\n            checkLoadedTimeoutId,\n            config = {\n                //Defaults. Do not set a default for map\n                //config to speed up normalize(), which\n                //will run faster if there is no default.\n                waitSeconds: 7,\n                baseUrl: './',\n                paths: {},\n                bundles: {},\n                pkgs: {},\n                shim: {},\n                config: {}\n            },\n            registry = {},\n            //registry of just enabled modules, to speed\n            //cycle breaking code when lots of modules\n            //are registered, but not activated.\n            enabledRegistry = {},\n            undefEvents = {},\n            defQueue = [],\n            defined = {},\n            urlFetched = {},\n            bundlesMap = {},\n            requireCounter = 1,\n            unnormalizedCounter = 1;\n\n        /**\n         * Trims the . and .. from an array of path segments.\n         * It will keep a leading path segment if a .. will become\n         * the first path segment, to help with module name lookups,\n         * which act like paths, but can be remapped. But the end result,\n         * all paths that use this function should look normalized.\n         * NOTE: this method MODIFIES the input array.\n         * @param {Array} ary the array of path segments.\n         */\n        function trimDots(ary) {\n            var i, part;\n            for (i = 0; i < ary.length; i++) {\n                part = ary[i];\n                if (part === '.') {\n                    ary.splice(i, 1);\n                    i -= 1;\n                } else if (part === '..') {\n                    // If at the start, or previous value is still ..,\n                    // keep them so that when converted to a path it may\n                    // still work when converted to a path, even though\n                    // as an ID it is less than ideal. In larger point\n                    // releases, may be better to just kick out an error.\n                    if (i === 0 || (i === 1 && ary[2] === '..') || ary[i - 1] === '..') {\n                        continue;\n                    } else if (i > 0) {\n                        ary.splice(i - 1, 2);\n                        i -= 2;\n                    }\n                }\n            }\n        }\n\n        /**\n         * Given a relative module name, like ./something, normalize it to\n         * a real name that can be mapped to a path.\n         * @param {String} name the relative name\n         * @param {String} baseName a real name that the name arg is relative\n         * to.\n         * @param {Boolean} applyMap apply the map config to the value. Should\n         * only be done if this normalization is for a dependency ID.\n         * @returns {String} normalized name\n         */\n        function normalize(name, baseName, applyMap) {\n            var pkgMain, mapValue, nameParts, i, j, nameSegment, lastIndex,\n                foundMap, foundI, foundStarMap, starI, normalizedBaseParts,\n                baseParts = (baseName && baseName.split('/')),\n                map = config.map,\n                starMap = map && map['*'];\n\n            //Adjust any relative paths.\n            if (name) {\n                name = name.split('/');\n                lastIndex = name.length - 1;\n\n                // If wanting node ID compatibility, strip .js from end\n                // of IDs. Have to do this here, and not in nameToUrl\n                // because node allows either .js or non .js to map\n                // to same file.\n                if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                    name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n                }\n\n                // Starts with a '.' so need the baseName\n                if (name[0].charAt(0) === '.' && baseParts) {\n                    //Convert baseName to array, and lop off the last part,\n                    //so that . matches that 'directory' and not name of the baseName's\n                    //module. For instance, baseName of 'one/two/three', maps to\n                    //'one/two/three.js', but we want the directory, 'one/two' for\n                    //this normalization.\n                    normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\n                    name = normalizedBaseParts.concat(name);\n                }\n\n                trimDots(name);\n                name = name.join('/');\n            }\n\n            //Apply map config if available.\n            if (applyMap && map && (baseParts || starMap)) {\n                nameParts = name.split('/');\n\n                outerLoop: for (i = nameParts.length; i > 0; i -= 1) {\n                    nameSegment = nameParts.slice(0, i).join('/');\n\n                    if (baseParts) {\n                        //Find the longest baseName segment match in the config.\n                        //So, do joins on the biggest to smallest lengths of baseParts.\n                        for (j = baseParts.length; j > 0; j -= 1) {\n                            mapValue = getOwn(map, baseParts.slice(0, j).join('/'));\n\n                            //baseName segment has config, find if it has one for\n                            //this name.\n                            if (mapValue) {\n                                mapValue = getOwn(mapValue, nameSegment);\n                                if (mapValue) {\n                                    //Match, update name to the new value.\n                                    foundMap = mapValue;\n                                    foundI = i;\n                                    break outerLoop;\n                                }\n                            }\n                        }\n                    }\n\n                    //Check for a star map match, but just hold on to it,\n                    //if there is a shorter segment match later in a matching\n                    //config, then favor over this star map.\n                    if (!foundStarMap && starMap && getOwn(starMap, nameSegment)) {\n                        foundStarMap = getOwn(starMap, nameSegment);\n                        starI = i;\n                    }\n                }\n\n                if (!foundMap && foundStarMap) {\n                    foundMap = foundStarMap;\n                    foundI = starI;\n                }\n\n                if (foundMap) {\n                    nameParts.splice(0, foundI, foundMap);\n                    name = nameParts.join('/');\n                }\n            }\n\n            // If the name points to a package's name, use\n            // the package main instead.\n            pkgMain = getOwn(config.pkgs, name);\n\n            return pkgMain ? pkgMain : name;\n        }\n\n        function removeScript(name) {\n            if (isBrowser) {\n                each(scripts(), function (scriptNode) {\n                    if (scriptNode.getAttribute('data-requiremodule') === name &&\n                            scriptNode.getAttribute('data-requirecontext') === context.contextName) {\n                        scriptNode.parentNode.removeChild(scriptNode);\n                        return true;\n                    }\n                });\n            }\n        }\n\n        function hasPathFallback(id) {\n            var pathConfig = getOwn(config.paths, id);\n            if (pathConfig && isArray(pathConfig) && pathConfig.length > 1) {\n                //Pop off the first array value, since it failed, and\n                //retry\n                pathConfig.shift();\n                context.require.undef(id);\n\n                //Custom require that does not do map translation, since\n                //ID is \"absolute\", already mapped/resolved.\n                context.makeRequire(null, {\n                    skipMap: true\n                })([id]);\n\n                return true;\n            }\n        }\n\n        //Turns a plugin!resource to [plugin, resource]\n        //with the plugin being undefined if the name\n        //did not have a plugin prefix.\n        function splitPrefix(name) {\n            var prefix,\n                index = name ? name.indexOf('!') : -1;\n            if (index > -1) {\n                prefix = name.substring(0, index);\n                name = name.substring(index + 1, name.length);\n            }\n            return [prefix, name];\n        }\n\n        /**\n         * Creates a module mapping that includes plugin prefix, module\n         * name, and path. If parentModuleMap is provided it will\n         * also normalize the name via require.normalize()\n         *\n         * @param {String} name the module name\n         * @param {String} [parentModuleMap] parent module map\n         * for the module name, used to resolve relative names.\n         * @param {Boolean} isNormalized: is the ID already normalized.\n         * This is true if this call is done for a define() module ID.\n         * @param {Boolean} applyMap: apply the map config to the ID.\n         * Should only be true if this map is for a dependency.\n         *\n         * @returns {Object}\n         */\n        function makeModuleMap(name, parentModuleMap, isNormalized, applyMap) {\n            var url, pluginModule, suffix, nameParts,\n                prefix = null,\n                parentName = parentModuleMap ? parentModuleMap.name : null,\n                originalName = name,\n                isDefine = true,\n                normalizedName = '';\n\n            //If no name, then it means it is a require call, generate an\n            //internal name.\n            if (!name) {\n                isDefine = false;\n                name = '_@r' + (requireCounter += 1);\n            }\n\n            nameParts = splitPrefix(name);\n            prefix = nameParts[0];\n            name = nameParts[1];\n\n            if (prefix) {\n                prefix = normalize(prefix, parentName, applyMap);\n                pluginModule = getOwn(defined, prefix);\n            }\n\n            //Account for relative paths if there is a base name.\n            if (name) {\n                if (prefix) {\n                    if (isNormalized) {\n                        normalizedName = name;\n                    } else if (pluginModule && pluginModule.normalize) {\n                        //Plugin is loaded, use its normalize method.\n                        normalizedName = pluginModule.normalize(name, function (name) {\n                            return normalize(name, parentName, applyMap);\n                        });\n                    } else {\n                        // If nested plugin references, then do not try to\n                        // normalize, as it will not normalize correctly. This\n                        // places a restriction on resourceIds, and the longer\n                        // term solution is not to normalize until plugins are\n                        // loaded and all normalizations to allow for async\n                        // loading of a loader plugin. But for now, fixes the\n                        // common uses. Details in #1131\n                        normalizedName = name.indexOf('!') === -1 ?\n                                         normalize(name, parentName, applyMap) :\n                                         name;\n                    }\n                } else {\n                    //A regular module.\n                    normalizedName = normalize(name, parentName, applyMap);\n\n                    //Normalized name may be a plugin ID due to map config\n                    //application in normalize. The map config values must\n                    //already be normalized, so do not need to redo that part.\n                    nameParts = splitPrefix(normalizedName);\n                    prefix = nameParts[0];\n                    normalizedName = nameParts[1];\n                    isNormalized = true;\n\n                    url = context.nameToUrl(normalizedName);\n                }\n            }\n\n            //If the id is a plugin id that cannot be determined if it needs\n            //normalization, stamp it with a unique ID so two matching relative\n            //ids that may conflict can be separate.\n            suffix = prefix && !pluginModule && !isNormalized ?\n                     '_unnormalized' + (unnormalizedCounter += 1) :\n                     '';\n\n            return {\n                prefix: prefix,\n                name: normalizedName,\n                parentMap: parentModuleMap,\n                unnormalized: !!suffix,\n                url: url,\n                originalName: originalName,\n                isDefine: isDefine,\n                id: (prefix ?\n                        prefix + '!' + normalizedName :\n                        normalizedName) + suffix\n            };\n        }\n\n        function getModule(depMap) {\n            var id = depMap.id,\n                mod = getOwn(registry, id);\n\n            if (!mod) {\n                mod = registry[id] = new context.Module(depMap);\n            }\n\n            return mod;\n        }\n\n        function on(depMap, name, fn) {\n            var id = depMap.id,\n                mod = getOwn(registry, id);\n\n            if (hasProp(defined, id) &&\n                    (!mod || mod.defineEmitComplete)) {\n                if (name === 'defined') {\n                    fn(defined[id]);\n                }\n            } else {\n                mod = getModule(depMap);\n                if (mod.error && name === 'error') {\n                    fn(mod.error);\n                } else {\n                    mod.on(name, fn);\n                }\n            }\n        }\n\n        function onError(err, errback) {\n            var ids = err.requireModules,\n                notified = false;\n\n            if (errback) {\n                errback(err);\n            } else {\n                each(ids, function (id) {\n                    var mod = getOwn(registry, id);\n                    if (mod) {\n                        //Set error on module, so it skips timeout checks.\n                        mod.error = err;\n                        if (mod.events.error) {\n                            notified = true;\n                            mod.emit('error', err);\n                        }\n                    }\n                });\n\n                if (!notified) {\n                    req.onError(err);\n                }\n            }\n        }\n\n        /**\n         * Internal method to transfer globalQueue items to this context's\n         * defQueue.\n         */\n        function takeGlobalQueue() {\n            //Push all the globalDefQueue items into the context's defQueue\n            if (globalDefQueue.length) {\n                each(globalDefQueue, function(queueItem) {\n                    var id = queueItem[0];\n                    if (typeof id === 'string') {\n                        context.defQueueMap[id] = true;\n                    }\n                    defQueue.push(queueItem);\n                });\n                globalDefQueue = [];\n            }\n        }\n\n        handlers = {\n            'require': function (mod) {\n                if (mod.require) {\n                    return mod.require;\n                } else {\n                    return (mod.require = context.makeRequire(mod.map));\n                }\n            },\n            'exports': function (mod) {\n                mod.usingExports = true;\n                if (mod.map.isDefine) {\n                    if (mod.exports) {\n                        return (defined[mod.map.id] = mod.exports);\n                    } else {\n                        return (mod.exports = defined[mod.map.id] = {});\n                    }\n                }\n            },\n            'module': function (mod) {\n                if (mod.module) {\n                    return mod.module;\n                } else {\n                    return (mod.module = {\n                        id: mod.map.id,\n                        uri: mod.map.url,\n                        config: function () {\n                            return getOwn(config.config, mod.map.id) || {};\n                        },\n                        exports: mod.exports || (mod.exports = {})\n                    });\n                }\n            }\n        };\n\n        function cleanRegistry(id) {\n            //Clean up machinery used for waiting modules.\n            delete registry[id];\n            delete enabledRegistry[id];\n        }\n\n        function breakCycle(mod, traced, processed) {\n            var id = mod.map.id;\n\n            if (mod.error) {\n                mod.emit('error', mod.error);\n            } else {\n                traced[id] = true;\n                each(mod.depMaps, function (depMap, i) {\n                    var depId = depMap.id,\n                        dep = getOwn(registry, depId);\n\n                    //Only force things that have not completed\n                    //being defined, so still in the registry,\n                    //and only if it has not been matched up\n                    //in the module already.\n                    if (dep && !mod.depMatched[i] && !processed[depId]) {\n                        if (getOwn(traced, depId)) {\n                            mod.defineDep(i, defined[depId]);\n                            mod.check(); //pass false?\n                        } else {\n                            breakCycle(dep, traced, processed);\n                        }\n                    }\n                });\n                processed[id] = true;\n            }\n        }\n\n        function checkLoaded() {\n            var err, usingPathFallback,\n                waitInterval = config.waitSeconds * 1000,\n                //It is possible to disable the wait interval by using waitSeconds of 0.\n                expired = waitInterval && (context.startTime + waitInterval) < new Date().getTime(),\n                noLoads = [],\n                reqCalls = [],\n                stillLoading = false,\n                needCycleCheck = true;\n\n            //Do not bother if this call was a result of a cycle break.\n            if (inCheckLoaded) {\n                return;\n            }\n\n            inCheckLoaded = true;\n\n            //Figure out the state of all the modules.\n            eachProp(enabledRegistry, function (mod) {\n                var map = mod.map,\n                    modId = map.id;\n\n                //Skip things that are not enabled or in error state.\n                if (!mod.enabled) {\n                    return;\n                }\n\n                if (!map.isDefine) {\n                    reqCalls.push(mod);\n                }\n\n                if (!mod.error) {\n                    //If the module should be executed, and it has not\n                    //been inited and time is up, remember it.\n                    if (!mod.inited && expired) {\n                        if (hasPathFallback(modId)) {\n                            usingPathFallback = true;\n                            stillLoading = true;\n                        } else {\n                            noLoads.push(modId);\n                            removeScript(modId);\n                        }\n                    } else if (!mod.inited && mod.fetched && map.isDefine) {\n                        stillLoading = true;\n                        if (!map.prefix) {\n                            //No reason to keep looking for unfinished\n                            //loading. If the only stillLoading is a\n                            //plugin resource though, keep going,\n                            //because it may be that a plugin resource\n                            //is waiting on a non-plugin cycle.\n                            return (needCycleCheck = false);\n                        }\n                    }\n                }\n            });\n\n            if (expired && noLoads.length) {\n                //If wait time expired, throw error of unloaded modules.\n                err = makeError('timeout', 'Load timeout for modules: ' + noLoads, null, noLoads);\n                err.contextName = context.contextName;\n                return onError(err);\n            }\n\n            //Not expired, check for a cycle.\n            if (needCycleCheck) {\n                each(reqCalls, function (mod) {\n                    breakCycle(mod, {}, {});\n                });\n            }\n\n            //If still waiting on loads, and the waiting load is something\n            //other than a plugin resource, or there are still outstanding\n            //scripts, then just try back later.\n            if ((!expired || usingPathFallback) && stillLoading) {\n                //Something is still waiting to load. Wait for it, but only\n                //if a timeout is not already in effect.\n                if ((isBrowser || isWebWorker) && !checkLoadedTimeoutId) {\n                    checkLoadedTimeoutId = setTimeout(function () {\n                        checkLoadedTimeoutId = 0;\n                        checkLoaded();\n                    }, 50);\n                }\n            }\n\n            inCheckLoaded = false;\n        }\n\n        Module = function (map) {\n            this.events = getOwn(undefEvents, map.id) || {};\n            this.map = map;\n            this.shim = getOwn(config.shim, map.id);\n            this.depExports = [];\n            this.depMaps = [];\n            this.depMatched = [];\n            this.pluginMaps = {};\n            this.depCount = 0;\n\n            /* this.exports this.factory\n               this.depMaps = [],\n               this.enabled, this.fetched\n            */\n        };\n\n        Module.prototype = {\n            init: function (depMaps, factory, errback, options) {\n                options = options || {};\n\n                //Do not do more inits if already done. Can happen if there\n                //are multiple define calls for the same module. That is not\n                //a normal, common case, but it is also not unexpected.\n                if (this.inited) {\n                    return;\n                }\n\n                this.factory = factory;\n\n                if (errback) {\n                    //Register for errors on this module.\n                    this.on('error', errback);\n                } else if (this.events.error) {\n                    //If no errback already, but there are error listeners\n                    //on this module, set up an errback to pass to the deps.\n                    errback = bind(this, function (err) {\n                        this.emit('error', err);\n                    });\n                }\n\n                //Do a copy of the dependency array, so that\n                //source inputs are not modified. For example\n                //\"shim\" deps are passed in here directly, and\n                //doing a direct modification of the depMaps array\n                //would affect that config.\n                this.depMaps = depMaps && depMaps.slice(0);\n\n                this.errback = errback;\n\n                //Indicate this module has be initialized\n                this.inited = true;\n\n                this.ignore = options.ignore;\n\n                //Could have option to init this module in enabled mode,\n                //or could have been previously marked as enabled. However,\n                //the dependencies are not known until init is called. So\n                //if enabled previously, now trigger dependencies as enabled.\n                if (options.enabled || this.enabled) {\n                    //Enable this module and dependencies.\n                    //Will call this.check()\n                    this.enable();\n                } else {\n                    this.check();\n                }\n            },\n\n            defineDep: function (i, depExports) {\n                //Because of cycles, defined callback for a given\n                //export can be called more than once.\n                if (!this.depMatched[i]) {\n                    this.depMatched[i] = true;\n                    this.depCount -= 1;\n                    this.depExports[i] = depExports;\n                }\n            },\n\n            fetch: function () {\n                if (this.fetched) {\n                    return;\n                }\n                this.fetched = true;\n\n                context.startTime = (new Date()).getTime();\n\n                var map = this.map;\n\n                //If the manager is for a plugin managed resource,\n                //ask the plugin to load it now.\n                if (this.shim) {\n                    context.makeRequire(this.map, {\n                        enableBuildCallback: true\n                    })(this.shim.deps || [], bind(this, function () {\n                        return map.prefix ? this.callPlugin() : this.load();\n                    }));\n                } else {\n                    //Regular dependency.\n                    return map.prefix ? this.callPlugin() : this.load();\n                }\n            },\n\n            load: function () {\n                var url = this.map.url;\n\n                //Regular dependency.\n                if (!urlFetched[url]) {\n                    urlFetched[url] = true;\n                    context.load(this.map.id, url);\n                }\n            },\n\n            /**\n             * Checks if the module is ready to define itself, and if so,\n             * define it.\n             */\n            check: function () {\n                if (!this.enabled || this.enabling) {\n                    return;\n                }\n\n                var err, cjsModule,\n                    id = this.map.id,\n                    depExports = this.depExports,\n                    exports = this.exports,\n                    factory = this.factory;\n\n                if (!this.inited) {\n                    // Only fetch if not already in the defQueue.\n                    if (!hasProp(context.defQueueMap, id)) {\n                        this.fetch();\n                    }\n                } else if (this.error) {\n                    this.emit('error', this.error);\n                } else if (!this.defining) {\n                    //The factory could trigger another require call\n                    //that would result in checking this module to\n                    //define itself again. If already in the process\n                    //of doing that, skip this work.\n                    this.defining = true;\n\n                    if (this.depCount < 1 && !this.defined) {\n                        if (isFunction(factory)) {\n                            //If there is an error listener, favor passing\n                            //to that instead of throwing an error. However,\n                            //only do it for define()'d  modules. require\n                            //errbacks should not be called for failures in\n                            //their callbacks (#699). However if a global\n                            //onError is set, use that.\n                            if ((this.events.error && this.map.isDefine) ||\n                                req.onError !== defaultOnError) {\n                                try {\n                                    exports = context.execCb(id, factory, depExports, exports);\n                                } catch (e) {\n                                    err = e;\n                                }\n                            } else {\n                                exports = context.execCb(id, factory, depExports, exports);\n                            }\n\n                            // Favor return value over exports. If node/cjs in play,\n                            // then will not have a return value anyway. Favor\n                            // module.exports assignment over exports object.\n                            if (this.map.isDefine && exports === undefined) {\n                                cjsModule = this.module;\n                                if (cjsModule) {\n                                    exports = cjsModule.exports;\n                                } else if (this.usingExports) {\n                                    //exports already set the defined value.\n                                    exports = this.exports;\n                                }\n                            }\n\n                            if (err) {\n                                err.requireMap = this.map;\n                                err.requireModules = this.map.isDefine ? [this.map.id] : null;\n                                err.requireType = this.map.isDefine ? 'define' : 'require';\n                                return onError((this.error = err));\n                            }\n\n                        } else {\n                            //Just a literal value\n                            exports = factory;\n                        }\n\n                        this.exports = exports;\n\n                        if (this.map.isDefine && !this.ignore) {\n                            defined[id] = exports;\n\n                            if (req.onResourceLoad) {\n                                var resLoadMaps = [];\n                                each(this.depMaps, function (depMap) {\n                                    resLoadMaps.push(depMap.normalizedMap || depMap);\n                                });\n                                req.onResourceLoad(context, this.map, resLoadMaps);\n                            }\n                        }\n\n                        //Clean up\n                        cleanRegistry(id);\n\n                        this.defined = true;\n                    }\n\n                    //Finished the define stage. Allow calling check again\n                    //to allow define notifications below in the case of a\n                    //cycle.\n                    this.defining = false;\n\n                    if (this.defined && !this.defineEmitted) {\n                        this.defineEmitted = true;\n                        this.emit('defined', this.exports);\n                        this.defineEmitComplete = true;\n                    }\n\n                }\n            },\n\n            callPlugin: function () {\n                var map = this.map,\n                    id = map.id,\n                    //Map already normalized the prefix.\n                    pluginMap = makeModuleMap(map.prefix);\n\n                //Mark this as a dependency for this plugin, so it\n                //can be traced for cycles.\n                this.depMaps.push(pluginMap);\n\n                on(pluginMap, 'defined', bind(this, function (plugin) {\n                    var load, normalizedMap, normalizedMod,\n                        bundleId = getOwn(bundlesMap, this.map.id),\n                        name = this.map.name,\n                        parentName = this.map.parentMap ? this.map.parentMap.name : null,\n                        localRequire = context.makeRequire(map.parentMap, {\n                            enableBuildCallback: true\n                        });\n\n                    //If current map is not normalized, wait for that\n                    //normalized name to load instead of continuing.\n                    if (this.map.unnormalized) {\n                        //Normalize the ID if the plugin allows it.\n                        if (plugin.normalize) {\n                            name = plugin.normalize(name, function (name) {\n                                return normalize(name, parentName, true);\n                            }) || '';\n                        }\n\n                        //prefix and name should already be normalized, no need\n                        //for applying map config again either.\n                        normalizedMap = makeModuleMap(map.prefix + '!' + name,\n                                                      this.map.parentMap,\n                                                      true);\n                        on(normalizedMap,\n                            'defined', bind(this, function (value) {\n                                this.map.normalizedMap = normalizedMap;\n                                this.init([], function () { return value; }, null, {\n                                    enabled: true,\n                                    ignore: true\n                                });\n                            }));\n\n                        normalizedMod = getOwn(registry, normalizedMap.id);\n                        if (normalizedMod) {\n                            //Mark this as a dependency for this plugin, so it\n                            //can be traced for cycles.\n                            this.depMaps.push(normalizedMap);\n\n                            if (this.events.error) {\n                                normalizedMod.on('error', bind(this, function (err) {\n                                    this.emit('error', err);\n                                }));\n                            }\n                            normalizedMod.enable();\n                        }\n\n                        return;\n                    }\n\n                    //If a paths config, then just load that file instead to\n                    //resolve the plugin, as it is built into that paths layer.\n                    if (bundleId) {\n                        this.map.url = context.nameToUrl(bundleId);\n                        this.load();\n                        return;\n                    }\n\n                    load = bind(this, function (value) {\n                        this.init([], function () { return value; }, null, {\n                            enabled: true\n                        });\n                    });\n\n                    load.error = bind(this, function (err) {\n                        this.inited = true;\n                        this.error = err;\n                        err.requireModules = [id];\n\n                        //Remove temp unnormalized modules for this module,\n                        //since they will never be resolved otherwise now.\n                        eachProp(registry, function (mod) {\n                            if (mod.map.id.indexOf(id + '_unnormalized') === 0) {\n                                cleanRegistry(mod.map.id);\n                            }\n                        });\n\n                        onError(err);\n                    });\n\n                    //Allow plugins to load other code without having to know the\n                    //context or how to 'complete' the load.\n                    load.fromText = bind(this, function (text, textAlt) {\n                        /*jslint evil: true */\n                        var moduleName = map.name,\n                            moduleMap = makeModuleMap(moduleName),\n                            hasInteractive = useInteractive;\n\n                        //As of 2.1.0, support just passing the text, to reinforce\n                        //fromText only being called once per resource. Still\n                        //support old style of passing moduleName but discard\n                        //that moduleName in favor of the internal ref.\n                        if (textAlt) {\n                            text = textAlt;\n                        }\n\n                        //Turn off interactive script matching for IE for any define\n                        //calls in the text, then turn it back on at the end.\n                        if (hasInteractive) {\n                            useInteractive = false;\n                        }\n\n                        //Prime the system by creating a module instance for\n                        //it.\n                        getModule(moduleMap);\n\n                        //Transfer any config to this other module.\n                        if (hasProp(config.config, id)) {\n                            config.config[moduleName] = config.config[id];\n                        }\n\n                        try {\n                            req.exec(text);\n                        } catch (e) {\n                            return onError(makeError('fromtexteval',\n                                             'fromText eval for ' + id +\n                                            ' failed: ' + e,\n                                             e,\n                                             [id]));\n                        }\n\n                        if (hasInteractive) {\n                            useInteractive = true;\n                        }\n\n                        //Mark this as a dependency for the plugin\n                        //resource\n                        this.depMaps.push(moduleMap);\n\n                        //Support anonymous modules.\n                        context.completeLoad(moduleName);\n\n                        //Bind the value of that module to the value for this\n                        //resource ID.\n                        localRequire([moduleName], load);\n                    });\n\n                    //Use parentName here since the plugin's name is not reliable,\n                    //could be some weird string with no path that actually wants to\n                    //reference the parentName's path.\n                    plugin.load(map.name, localRequire, load, config);\n                }));\n\n                context.enable(pluginMap, this);\n                this.pluginMaps[pluginMap.id] = pluginMap;\n            },\n\n            enable: function () {\n                enabledRegistry[this.map.id] = this;\n                this.enabled = true;\n\n                //Set flag mentioning that the module is enabling,\n                //so that immediate calls to the defined callbacks\n                //for dependencies do not trigger inadvertent load\n                //with the depCount still being zero.\n                this.enabling = true;\n\n                //Enable each dependency\n                each(this.depMaps, bind(this, function (depMap, i) {\n                    var id, mod, handler;\n\n                    if (typeof depMap === 'string') {\n                        //Dependency needs to be converted to a depMap\n                        //and wired up to this module.\n                        depMap = makeModuleMap(depMap,\n                                               (this.map.isDefine ? this.map : this.map.parentMap),\n                                               false,\n                                               !this.skipMap);\n                        this.depMaps[i] = depMap;\n\n                        handler = getOwn(handlers, depMap.id);\n\n                        if (handler) {\n                            this.depExports[i] = handler(this);\n                            return;\n                        }\n\n                        this.depCount += 1;\n\n                        on(depMap, 'defined', bind(this, function (depExports) {\n                            if (this.undefed) {\n                                return;\n                            }\n                            this.defineDep(i, depExports);\n                            this.check();\n                        }));\n\n                        if (this.errback) {\n                            on(depMap, 'error', bind(this, this.errback));\n                        } else if (this.events.error) {\n                            // No direct errback on this module, but something\n                            // else is listening for errors, so be sure to\n                            // propagate the error correctly.\n                            on(depMap, 'error', bind(this, function(err) {\n                                this.emit('error', err);\n                            }));\n                        }\n                    }\n\n                    id = depMap.id;\n                    mod = registry[id];\n\n                    //Skip special modules like 'require', 'exports', 'module'\n                    //Also, don't call enable if it is already enabled,\n                    //important in circular dependency cases.\n                    if (!hasProp(handlers, id) && mod && !mod.enabled) {\n                        context.enable(depMap, this);\n                    }\n                }));\n\n                //Enable each plugin that is used in\n                //a dependency\n                eachProp(this.pluginMaps, bind(this, function (pluginMap) {\n                    var mod = getOwn(registry, pluginMap.id);\n                    if (mod && !mod.enabled) {\n                        context.enable(pluginMap, this);\n                    }\n                }));\n\n                this.enabling = false;\n\n                this.check();\n            },\n\n            on: function (name, cb) {\n                var cbs = this.events[name];\n                if (!cbs) {\n                    cbs = this.events[name] = [];\n                }\n                cbs.push(cb);\n            },\n\n            emit: function (name, evt) {\n                each(this.events[name], function (cb) {\n                    cb(evt);\n                });\n                if (name === 'error') {\n                    //Now that the error handler was triggered, remove\n                    //the listeners, since this broken Module instance\n                    //can stay around for a while in the registry.\n                    delete this.events[name];\n                }\n            }\n        };\n\n        function callGetModule(args) {\n            //Skip modules already defined.\n            if (!hasProp(defined, args[0])) {\n                getModule(makeModuleMap(args[0], null, true)).init(args[1], args[2]);\n            }\n        }\n\n        function removeListener(node, func, name, ieName) {\n            //Favor detachEvent because of IE9\n            //issue, see attachEvent/addEventListener comment elsewhere\n            //in this file.\n            if (node.detachEvent && !isOpera) {\n                //Probably IE. If not it will throw an error, which will be\n                //useful to know.\n                if (ieName) {\n                    node.detachEvent(ieName, func);\n                }\n            } else {\n                node.removeEventListener(name, func, false);\n            }\n        }\n\n        /**\n         * Given an event from a script node, get the requirejs info from it,\n         * and then removes the event listeners on the node.\n         * @param {Event} evt\n         * @returns {Object}\n         */\n        function getScriptData(evt) {\n            //Using currentTarget instead of target for Firefox 2.0's sake. Not\n            //all old browsers will be supported, but this one was easy enough\n            //to support and still makes sense.\n            var node = evt.currentTarget || evt.srcElement;\n\n            //Remove the listeners once here.\n            removeListener(node, context.onScriptLoad, 'load', 'onreadystatechange');\n            removeListener(node, context.onScriptError, 'error');\n\n            return {\n                node: node,\n                id: node && node.getAttribute('data-requiremodule')\n            };\n        }\n\n        function intakeDefines() {\n            var args;\n\n            //Any defined modules in the global queue, intake them now.\n            takeGlobalQueue();\n\n            //Make sure any remaining defQueue items get properly processed.\n            while (defQueue.length) {\n                args = defQueue.shift();\n                if (args[0] === null) {\n                    return onError(makeError('mismatch', 'Mismatched anonymous define() module: ' +\n                        args[args.length - 1]));\n                } else {\n                    //args are id, deps, factory. Should be normalized by the\n                    //define() function.\n                    callGetModule(args);\n                }\n            }\n            context.defQueueMap = {};\n        }\n\n        context = {\n            config: config,\n            contextName: contextName,\n            registry: registry,\n            defined: defined,\n            urlFetched: urlFetched,\n            defQueue: defQueue,\n            defQueueMap: {},\n            Module: Module,\n            makeModuleMap: makeModuleMap,\n            nextTick: req.nextTick,\n            onError: onError,\n\n            /**\n             * Set a configuration for the context.\n             * @param {Object} cfg config object to integrate.\n             */\n            configure: function (cfg) {\n                //Make sure the baseUrl ends in a slash.\n                if (cfg.baseUrl) {\n                    if (cfg.baseUrl.charAt(cfg.baseUrl.length - 1) !== '/') {\n                        cfg.baseUrl += '/';\n                    }\n                }\n\n                // Convert old style urlArgs string to a function.\n                if (typeof cfg.urlArgs === 'string') {\n                    var urlArgs = cfg.urlArgs;\n                    cfg.urlArgs = function(id, url) {\n                        return (url.indexOf('?') === -1 ? '?' : '&') + urlArgs;\n                    };\n                }\n\n                //Save off the paths since they require special processing,\n                //they are additive.\n                var shim = config.shim,\n                    objs = {\n                        paths: true,\n                        bundles: true,\n                        config: true,\n                        map: true\n                    };\n\n                eachProp(cfg, function (value, prop) {\n                    if (objs[prop]) {\n                        if (!config[prop]) {\n                            config[prop] = {};\n                        }\n                        mixin(config[prop], value, true, true);\n                    } else {\n                        config[prop] = value;\n                    }\n                });\n\n                //Reverse map the bundles\n                if (cfg.bundles) {\n                    eachProp(cfg.bundles, function (value, prop) {\n                        each(value, function (v) {\n                            if (v !== prop) {\n                                bundlesMap[v] = prop;\n                            }\n                        });\n                    });\n                }\n\n                //Merge shim\n                if (cfg.shim) {\n                    eachProp(cfg.shim, function (value, id) {\n                        //Normalize the structure\n                        if (isArray(value)) {\n                            value = {\n                                deps: value\n                            };\n                        }\n                        if ((value.exports || value.init) && !value.exportsFn) {\n                            value.exportsFn = context.makeShimExports(value);\n                        }\n                        shim[id] = value;\n                    });\n                    config.shim = shim;\n                }\n\n                //Adjust packages if necessary.\n                if (cfg.packages) {\n                    each(cfg.packages, function (pkgObj) {\n                        var location, name;\n\n                        pkgObj = typeof pkgObj === 'string' ? {name: pkgObj} : pkgObj;\n\n                        name = pkgObj.name;\n                        location = pkgObj.location;\n                        if (location) {\n                            config.paths[name] = pkgObj.location;\n                        }\n\n                        //Save pointer to main module ID for pkg name.\n                        //Remove leading dot in main, so main paths are normalized,\n                        //and remove any trailing .js, since different package\n                        //envs have different conventions: some use a module name,\n                        //some use a file name.\n                        config.pkgs[name] = pkgObj.name + '/' + (pkgObj.main || 'main')\n                                     .replace(currDirRegExp, '')\n                                     .replace(jsSuffixRegExp, '');\n                    });\n                }\n\n                //If there are any \"waiting to execute\" modules in the registry,\n                //update the maps for them, since their info, like URLs to load,\n                //may have changed.\n                eachProp(registry, function (mod, id) {\n                    //If module already has init called, since it is too\n                    //late to modify them, and ignore unnormalized ones\n                    //since they are transient.\n                    if (!mod.inited && !mod.map.unnormalized) {\n                        mod.map = makeModuleMap(id, null, true);\n                    }\n                });\n\n                //If a deps array or a config callback is specified, then call\n                //require with those args. This is useful when require is defined as a\n                //config object before require.js is loaded.\n                if (cfg.deps || cfg.callback) {\n                    context.require(cfg.deps || [], cfg.callback);\n                }\n            },\n\n            makeShimExports: function (value) {\n                function fn() {\n                    var ret;\n                    if (value.init) {\n                        ret = value.init.apply(global, arguments);\n                    }\n                    return ret || (value.exports && getGlobal(value.exports));\n                }\n                return fn;\n            },\n\n            makeRequire: function (relMap, options) {\n                options = options || {};\n\n                function localRequire(deps, callback, errback) {\n                    var id, map, requireMod;\n\n                    if (options.enableBuildCallback && callback && isFunction(callback)) {\n                        callback.__requireJsBuild = true;\n                    }\n\n                    if (typeof deps === 'string') {\n                        if (isFunction(callback)) {\n                            //Invalid call\n                            return onError(makeError('requireargs', 'Invalid require call'), errback);\n                        }\n\n                        //If require|exports|module are requested, get the\n                        //value for them from the special handlers. Caveat:\n                        //this only works while module is being defined.\n                        if (relMap && hasProp(handlers, deps)) {\n                            return handlers[deps](registry[relMap.id]);\n                        }\n\n                        //Synchronous access to one module. If require.get is\n                        //available (as in the Node adapter), prefer that.\n                        if (req.get) {\n                            return req.get(context, deps, relMap, localRequire);\n                        }\n\n                        //Normalize module name, if it contains . or ..\n                        map = makeModuleMap(deps, relMap, false, true);\n                        id = map.id;\n\n                        if (!hasProp(defined, id)) {\n                            return onError(makeError('notloaded', 'Module name \"' +\n                                        id +\n                                        '\" has not been loaded yet for context: ' +\n                                        contextName +\n                                        (relMap ? '' : '. Use require([])')));\n                        }\n                        return defined[id];\n                    }\n\n                    //Grab defines waiting in the global queue.\n                    intakeDefines();\n\n                    //Mark all the dependencies as needing to be loaded.\n                    context.nextTick(function () {\n                        //Some defines could have been added since the\n                        //require call, collect them.\n                        intakeDefines();\n\n                        requireMod = getModule(makeModuleMap(null, relMap));\n\n                        //Store if map config should be applied to this require\n                        //call for dependencies.\n                        requireMod.skipMap = options.skipMap;\n\n                        requireMod.init(deps, callback, errback, {\n                            enabled: true\n                        });\n\n                        checkLoaded();\n                    });\n\n                    return localRequire;\n                }\n\n                mixin(localRequire, {\n                    isBrowser: isBrowser,\n\n                    /**\n                     * Converts a module name + .extension into an URL path.\n                     * *Requires* the use of a module name. It does not support using\n                     * plain URLs like nameToUrl.\n                     */\n                    toUrl: function (moduleNamePlusExt) {\n                        var ext,\n                            index = moduleNamePlusExt.lastIndexOf('.'),\n                            segment = moduleNamePlusExt.split('/')[0],\n                            isRelative = segment === '.' || segment === '..';\n\n                        //Have a file extension alias, and it is not the\n                        //dots from a relative path.\n                        if (index !== -1 && (!isRelative || index > 1)) {\n                            ext = moduleNamePlusExt.substring(index, moduleNamePlusExt.length);\n                            moduleNamePlusExt = moduleNamePlusExt.substring(0, index);\n                        }\n\n                        return context.nameToUrl(normalize(moduleNamePlusExt,\n                                                relMap && relMap.id, true), ext,  true);\n                    },\n\n                    defined: function (id) {\n                        return hasProp(defined, makeModuleMap(id, relMap, false, true).id);\n                    },\n\n                    specified: function (id) {\n                        id = makeModuleMap(id, relMap, false, true).id;\n                        return hasProp(defined, id) || hasProp(registry, id);\n                    }\n                });\n\n                //Only allow undef on top level require calls\n                if (!relMap) {\n                    localRequire.undef = function (id) {\n                        //Bind any waiting define() calls to this context,\n                        //fix for #408\n                        takeGlobalQueue();\n\n                        var map = makeModuleMap(id, relMap, true),\n                            mod = getOwn(registry, id);\n\n                        mod.undefed = true;\n                        removeScript(id);\n\n                        delete defined[id];\n                        delete urlFetched[map.url];\n                        delete undefEvents[id];\n\n                        //Clean queued defines too. Go backwards\n                        //in array so that the splices do not\n                        //mess up the iteration.\n                        eachReverse(defQueue, function(args, i) {\n                            if (args[0] === id) {\n                                defQueue.splice(i, 1);\n                            }\n                        });\n                        delete context.defQueueMap[id];\n\n                        if (mod) {\n                            //Hold on to listeners in case the\n                            //module will be attempted to be reloaded\n                            //using a different config.\n                            if (mod.events.defined) {\n                                undefEvents[id] = mod.events;\n                            }\n\n                            cleanRegistry(id);\n                        }\n                    };\n                }\n\n                return localRequire;\n            },\n\n            /**\n             * Called to enable a module if it is still in the registry\n             * awaiting enablement. A second arg, parent, the parent module,\n             * is passed in for context, when this method is overridden by\n             * the optimizer. Not shown here to keep code compact.\n             */\n            enable: function (depMap) {\n                var mod = getOwn(registry, depMap.id);\n                if (mod) {\n                    getModule(depMap).enable();\n                }\n            },\n\n            /**\n             * Internal method used by environment adapters to complete a load event.\n             * A load event could be a script load or just a load pass from a synchronous\n             * load call.\n             * @param {String} moduleName the name of the module to potentially complete.\n             */\n            completeLoad: function (moduleName) {\n                var found, args, mod,\n                    shim = getOwn(config.shim, moduleName) || {},\n                    shExports = shim.exports;\n\n                takeGlobalQueue();\n\n                while (defQueue.length) {\n                    args = defQueue.shift();\n                    if (args[0] === null) {\n                        args[0] = moduleName;\n                        //If already found an anonymous module and bound it\n                        //to this name, then this is some other anon module\n                        //waiting for its completeLoad to fire.\n                        if (found) {\n                            break;\n                        }\n                        found = true;\n                    } else if (args[0] === moduleName) {\n                        //Found matching define call for this script!\n                        found = true;\n                    }\n\n                    callGetModule(args);\n                }\n                context.defQueueMap = {};\n\n                //Do this after the cycle of callGetModule in case the result\n                //of those calls/init calls changes the registry.\n                mod = getOwn(registry, moduleName);\n\n                if (!found && !hasProp(defined, moduleName) && mod && !mod.inited) {\n                    if (config.enforceDefine && (!shExports || !getGlobal(shExports))) {\n                        if (hasPathFallback(moduleName)) {\n                            return;\n                        } else {\n                            return onError(makeError('nodefine',\n                                             'No define call for ' + moduleName,\n                                             null,\n                                             [moduleName]));\n                        }\n                    } else {\n                        //A script that does not call define(), so just simulate\n                        //the call for it.\n                        callGetModule([moduleName, (shim.deps || []), shim.exportsFn]);\n                    }\n                }\n\n                checkLoaded();\n            },\n\n            /**\n             * Converts a module name to a file path. Supports cases where\n             * moduleName may actually be just an URL.\n             * Note that it **does not** call normalize on the moduleName,\n             * it is assumed to have already been normalized. This is an\n             * internal API, not a public one. Use toUrl for the public API.\n             */\n            nameToUrl: function (moduleName, ext, skipExt) {\n                var paths, syms, i, parentModule, url,\n                    parentPath, bundleId,\n                    pkgMain = getOwn(config.pkgs, moduleName);\n\n                if (pkgMain) {\n                    moduleName = pkgMain;\n                }\n\n                bundleId = getOwn(bundlesMap, moduleName);\n\n                if (bundleId) {\n                    return context.nameToUrl(bundleId, ext, skipExt);\n                }\n\n                //If a colon is in the URL, it indicates a protocol is used and it is just\n                //an URL to a file, or if it starts with a slash, contains a query arg (i.e. ?)\n                //or ends with .js, then assume the user meant to use an url and not a module id.\n                //The slash is important for protocol-less URLs as well as full paths.\n                if (req.jsExtRegExp.test(moduleName)) {\n                    //Just a plain path, not module name lookup, so just return it.\n                    //Add extension if it is included. This is a bit wonky, only non-.js things pass\n                    //an extension, this method probably needs to be reworked.\n                    url = moduleName + (ext || '');\n                } else {\n                    //A module that needs to be converted to a path.\n                    paths = config.paths;\n\n                    syms = moduleName.split('/');\n                    //For each module name segment, see if there is a path\n                    //registered for it. Start with most specific name\n                    //and work up from it.\n                    for (i = syms.length; i > 0; i -= 1) {\n                        parentModule = syms.slice(0, i).join('/');\n\n                        parentPath = getOwn(paths, parentModule);\n                        if (parentPath) {\n                            //If an array, it means there are a few choices,\n                            //Choose the one that is desired\n                            if (isArray(parentPath)) {\n                                parentPath = parentPath[0];\n                            }\n                            syms.splice(0, i, parentPath);\n                            break;\n                        }\n                    }\n\n                    //Join the path parts together, then figure out if baseUrl is needed.\n                    url = syms.join('/');\n                    url += (ext || (/^data\\:|^blob\\:|\\?/.test(url) || skipExt ? '' : '.js'));\n                    url = (url.charAt(0) === '/' || url.match(/^[\\w\\+\\.\\-]+:/) ? '' : config.baseUrl) + url;\n                }\n\n                return config.urlArgs && !/^blob\\:/.test(url) ?\n                       url + config.urlArgs(moduleName, url) : url;\n            },\n\n            //Delegates to req.load. Broken out as a separate function to\n            //allow overriding in the optimizer.\n            load: function (id, url) {\n                req.load(context, id, url);\n            },\n\n            /**\n             * Executes a module callback function. Broken out as a separate function\n             * solely to allow the build system to sequence the files in the built\n             * layer in the right sequence.\n             *\n             * @private\n             */\n            execCb: function (name, callback, args, exports) {\n                return callback.apply(exports, args);\n            },\n\n            /**\n             * callback for script loads, used to check status of loading.\n             *\n             * @param {Event} evt the event from the browser for the script\n             * that was loaded.\n             */\n            onScriptLoad: function (evt) {\n                //Using currentTarget instead of target for Firefox 2.0's sake. Not\n                //all old browsers will be supported, but this one was easy enough\n                //to support and still makes sense.\n                if (evt.type === 'load' ||\n                        (readyRegExp.test((evt.currentTarget || evt.srcElement).readyState))) {\n                    //Reset interactive script so a script node is not held onto for\n                    //to long.\n                    interactiveScript = null;\n\n                    //Pull out the name of the module and the context.\n                    var data = getScriptData(evt);\n                    context.completeLoad(data.id);\n                }\n            },\n\n            /**\n             * Callback for script errors.\n             */\n            onScriptError: function (evt) {\n                var data = getScriptData(evt);\n                if (!hasPathFallback(data.id)) {\n                    var parents = [];\n                    eachProp(registry, function(value, key) {\n                        if (key.indexOf('_@r') !== 0) {\n                            each(value.depMaps, function(depMap) {\n                                if (depMap.id === data.id) {\n                                    parents.push(key);\n                                    return true;\n                                }\n                            });\n                        }\n                    });\n                    return onError(makeError('scripterror', 'Script error for \"' + data.id +\n                                             (parents.length ?\n                                             '\", needed by: ' + parents.join(', ') :\n                                             '\"'), evt, [data.id]));\n                }\n            }\n        };\n\n        context.require = context.makeRequire();\n        return context;\n    }\n\n    /**\n     * Main entry point.\n     *\n     * If the only argument to require is a string, then the module that\n     * is represented by that string is fetched for the appropriate context.\n     *\n     * If the first argument is an array, then it will be treated as an array\n     * of dependency string names to fetch. An optional function callback can\n     * be specified to execute when all of those dependencies are available.\n     *\n     * Make a local req variable to help Caja compliance (it assumes things\n     * on a require that are not standardized), and to give a short\n     * name for minification/local scope use.\n     */\n    req = requirejs = function (deps, callback, errback, optional) {\n\n        //Find the right context, use default\n        var context, config,\n            contextName = defContextName;\n\n        // Determine if have config object in the call.\n        if (!isArray(deps) && typeof deps !== 'string') {\n            // deps is a config object\n            config = deps;\n            if (isArray(callback)) {\n                // Adjust args if there are dependencies\n                deps = callback;\n                callback = errback;\n                errback = optional;\n            } else {\n                deps = [];\n            }\n        }\n\n        if (config && config.context) {\n            contextName = config.context;\n        }\n\n        context = getOwn(contexts, contextName);\n        if (!context) {\n            context = contexts[contextName] = req.s.newContext(contextName);\n        }\n\n        if (config) {\n            context.configure(config);\n        }\n\n        return context.require(deps, callback, errback);\n    };\n\n    /**\n     * Support require.config() to make it easier to cooperate with other\n     * AMD loaders on globally agreed names.\n     */\n    req.config = function (config) {\n        return req(config);\n    };\n\n    /**\n     * Execute something after the current tick\n     * of the event loop. Override for other envs\n     * that have a better solution than setTimeout.\n     * @param  {Function} fn function to execute later.\n     */\n    req.nextTick = typeof setTimeout !== 'undefined' ? function (fn) {\n        setTimeout(fn, 4);\n    } : function (fn) { fn(); };\n\n    /**\n     * Export require as a global, but only if it does not already exist.\n     */\n    if (!require) {\n        require = req;\n    }\n\n    req.version = version;\n\n    //Used to filter out dependencies that are already paths.\n    req.jsExtRegExp = /^\\/|:|\\?|\\.js$/;\n    req.isBrowser = isBrowser;\n    s = req.s = {\n        contexts: contexts,\n        newContext: newContext\n    };\n\n    //Create default context.\n    req({});\n\n    //Exports some context-sensitive methods on global require.\n    each([\n        'toUrl',\n        'undef',\n        'defined',\n        'specified'\n    ], function (prop) {\n        //Reference from contexts instead of early binding to default context,\n        //so that during builds, the latest instance of the default context\n        //with its config gets used.\n        req[prop] = function () {\n            var ctx = contexts[defContextName];\n            return ctx.require[prop].apply(ctx, arguments);\n        };\n    });\n\n    if (isBrowser) {\n        head = s.head = document.getElementsByTagName('head')[0];\n        //If BASE tag is in play, using appendChild is a problem for IE6.\n        //When that browser dies, this can be removed. Details in this jQuery bug:\n        //http://dev.jquery.com/ticket/2709\n        baseElement = document.getElementsByTagName('base')[0];\n        if (baseElement) {\n            head = s.head = baseElement.parentNode;\n        }\n    }\n\n    /**\n     * Any errors that require explicitly generates will be passed to this\n     * function. Intercept/override it if you want custom error handling.\n     * @param {Error} err the error object.\n     */\n    req.onError = defaultOnError;\n\n    /**\n     * Creates the node for the load command. Only used in browser envs.\n     */\n    req.createNode = function (config, moduleName, url) {\n        var node = config.xhtml ?\n                document.createElementNS('http://www.w3.org/1999/xhtml', 'html:script') :\n                document.createElement('script');\n        node.type = config.scriptType || 'text/javascript';\n        node.charset = 'utf-8';\n        node.async = true;\n        return node;\n    };\n\n    /**\n     * Does the request to load a module for the browser case.\n     * Make this a separate function to allow other environments\n     * to override it.\n     *\n     * @param {Object} context the require context to find state.\n     * @param {String} moduleName the name of the module.\n     * @param {Object} url the URL to the module.\n     */\n    req.load = function (context, moduleName, url) {\n        var config = (context && context.config) || {},\n            node;\n        if (isBrowser) {\n            //In the browser so use a script tag\n            node = req.createNode(config, moduleName, url);\n\n            node.setAttribute('data-requirecontext', context.contextName);\n            node.setAttribute('data-requiremodule', moduleName);\n\n            //Set up load listener. Test attachEvent first because IE9 has\n            //a subtle issue in its addEventListener and script onload firings\n            //that do not match the behavior of all other browsers with\n            //addEventListener support, which fire the onload event for a\n            //script right after the script execution. See:\n            //https://connect.microsoft.com/IE/feedback/details/648057/script-onload-event-is-not-fired-immediately-after-script-execution\n            //UNFORTUNATELY Opera implements attachEvent but does not follow the script\n            //script execution mode.\n            if (node.attachEvent &&\n                    //Check if node.attachEvent is artificially added by custom script or\n                    //natively supported by browser\n                    //read https://github.com/requirejs/requirejs/issues/187\n                    //if we can NOT find [native code] then it must NOT natively supported.\n                    //in IE8, node.attachEvent does not have toString()\n                    //Note the test for \"[native code\" with no closing brace, see:\n                    //https://github.com/requirejs/requirejs/issues/273\n                    !(node.attachEvent.toString && node.attachEvent.toString().indexOf('[native code') < 0) &&\n                    !isOpera) {\n                //Probably IE. IE (at least 6-8) do not fire\n                //script onload right after executing the script, so\n                //we cannot tie the anonymous define call to a name.\n                //However, IE reports the script as being in 'interactive'\n                //readyState at the time of the define call.\n                useInteractive = true;\n\n                node.attachEvent('onreadystatechange', context.onScriptLoad);\n                //It would be great to add an error handler here to catch\n                //404s in IE9+. However, onreadystatechange will fire before\n                //the error handler, so that does not help. If addEventListener\n                //is used, then IE will fire error before load, but we cannot\n                //use that pathway given the connect.microsoft.com issue\n                //mentioned above about not doing the 'script execute,\n                //then fire the script load event listener before execute\n                //next script' that other browsers do.\n                //Best hope: IE10 fixes the issues,\n                //and then destroys all installs of IE 6-9.\n                //node.attachEvent('onerror', context.onScriptError);\n            } else {\n                node.addEventListener('load', context.onScriptLoad, false);\n                node.addEventListener('error', context.onScriptError, false);\n            }\n            node.src = url;\n\n            //Calling onNodeCreated after all properties on the node have been\n            //set, but before it is placed in the DOM.\n            if (config.onNodeCreated) {\n                config.onNodeCreated(node, config, moduleName, url);\n            }\n\n            //For some cache cases in IE 6-8, the script executes before the end\n            //of the appendChild execution, so to tie an anonymous define\n            //call to the module name (which is stored on the node), hold on\n            //to a reference to this node, but clear after the DOM insertion.\n            currentlyAddingScript = node;\n            if (baseElement) {\n                head.insertBefore(node, baseElement);\n            } else {\n                head.appendChild(node);\n            }\n            currentlyAddingScript = null;\n\n            return node;\n        } else if (isWebWorker) {\n            try {\n                //In a web worker, use importScripts. This is not a very\n                //efficient use of importScripts, importScripts will block until\n                //its script is downloaded and evaluated. However, if web workers\n                //are in play, the expectation is that a build has been done so\n                //that only one script needs to be loaded anyway. This may need\n                //to be reevaluated if other use cases become common.\n\n                // Post a task to the event loop to work around a bug in WebKit\n                // where the worker gets garbage-collected after calling\n                // importScripts(): https://webkit.org/b/153317\n                setTimeout(function() {}, 0);\n                importScripts(url);\n\n                //Account for anonymous modules\n                context.completeLoad(moduleName);\n            } catch (e) {\n                context.onError(makeError('importscripts',\n                                'importScripts failed for ' +\n                                    moduleName + ' at ' + url,\n                                e,\n                                [moduleName]));\n            }\n        }\n    };\n\n    function getInteractiveScript() {\n        if (interactiveScript && interactiveScript.readyState === 'interactive') {\n            return interactiveScript;\n        }\n\n        eachReverse(scripts(), function (script) {\n            if (script.readyState === 'interactive') {\n                return (interactiveScript = script);\n            }\n        });\n        return interactiveScript;\n    }\n\n    //Look for a data-main script attribute, which could also adjust the baseUrl.\n    if (isBrowser && !cfg.skipDataMain) {\n        //Figure out baseUrl. Get it from the script tag with require.js in it.\n        eachReverse(scripts(), function (script) {\n            //Set the 'head' where we can append children by\n            //using the script's parent.\n            if (!head) {\n                head = script.parentNode;\n            }\n\n            //Look for a data-main attribute to set main script for the page\n            //to load. If it is there, the path to data main becomes the\n            //baseUrl, if it is not already set.\n            dataMain = script.getAttribute('data-main');\n            if (dataMain) {\n                //Preserve dataMain in case it is a path (i.e. contains '?')\n                mainScript = dataMain;\n\n                //Set final baseUrl if there is not already an explicit one,\n                //but only do so if the data-main value is not a loader plugin\n                //module ID.\n                if (!cfg.baseUrl && mainScript.indexOf('!') === -1) {\n                    //Pull off the directory of data-main for use as the\n                    //baseUrl.\n                    src = mainScript.split('/');\n                    mainScript = src.pop();\n                    subPath = src.length ? src.join('/')  + '/' : './';\n\n                    cfg.baseUrl = subPath;\n                }\n\n                //Strip off any trailing .js since mainScript is now\n                //like a module name.\n                mainScript = mainScript.replace(jsSuffixRegExp, '');\n\n                //If mainScript is still a path, fall back to dataMain\n                if (req.jsExtRegExp.test(mainScript)) {\n                    mainScript = dataMain;\n                }\n\n                //Put the data-main script in the files to load.\n                cfg.deps = cfg.deps ? cfg.deps.concat(mainScript) : [mainScript];\n\n                return true;\n            }\n        });\n    }\n\n    /**\n     * The function that handles definitions of modules. Differs from\n     * require() in that a string for the module should be the first argument,\n     * and the function to execute after dependencies are loaded should\n     * return a value to define the module corresponding to the first argument's\n     * name.\n     */\n    define = function (name, deps, callback) {\n        var node, context;\n\n        //Allow for anonymous modules\n        if (typeof name !== 'string') {\n            //Adjust args appropriately\n            callback = deps;\n            deps = name;\n            name = null;\n        }\n\n        //This module may not have dependencies\n        if (!isArray(deps)) {\n            callback = deps;\n            deps = null;\n        }\n\n        //If no name, and callback is a function, then figure out if it a\n        //CommonJS thing with dependencies.\n        if (!deps && isFunction(callback)) {\n            deps = [];\n            //Remove comments from the callback string,\n            //look for require calls, and pull them into the dependencies,\n            //but only if there are function args.\n            if (callback.length) {\n                callback\n                    .toString()\n                    .replace(commentRegExp, commentReplace)\n                    .replace(cjsRequireRegExp, function (match, dep) {\n                        deps.push(dep);\n                    });\n\n                //May be a CommonJS thing even without require calls, but still\n                //could use exports, and module. Avoid doing exports and module\n                //work though if it just needs require.\n                //REQUIRES the function to expect the CommonJS variables in the\n                //order listed below.\n                deps = (callback.length === 1 ? ['require'] : ['require', 'exports', 'module']).concat(deps);\n            }\n        }\n\n        //If in IE 6-8 and hit an anonymous define() call, do the interactive\n        //work.\n        if (useInteractive) {\n            node = currentlyAddingScript || getInteractiveScript();\n            if (node) {\n                if (!name) {\n                    name = node.getAttribute('data-requiremodule');\n                }\n                context = contexts[node.getAttribute('data-requirecontext')];\n            }\n        }\n\n        //Always save off evaluating the def call until the script onload handler.\n        //This allows multiple modules to be in a file without prematurely\n        //tracing dependencies, and allows for anonymous module support,\n        //where the module name is not known until the script onload event\n        //occurs. If no context, use the global queue, and get it processed\n        //in the onscript load callback.\n        if (context) {\n            context.defQueue.push([name, deps, callback]);\n            context.defQueueMap[name] = true;\n        } else {\n            globalDefQueue.push([name, deps, callback]);\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n\n    /**\n     * Executes the text. Normally just uses eval, but can be modified\n     * to use a better, environment-specific call. Only used for transpiling\n     * loader plugins, not for plain JS modules.\n     * @param {String} text the text to execute/evaluate.\n     */\n    req.exec = function (text) {\n        /*jslint evil: true */\n        return eval(text);\n    };\n\n    //Set up with config info.\n    req(cfg);\n}(this, (typeof setTimeout === 'undefined' ? undefined : setTimeout)));\n"]}