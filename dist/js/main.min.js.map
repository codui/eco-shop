{"version":3,"sources":["main.js","server.js"],"names":["hoursCellArray","document","getElementsByClassName","minutesCellArray","secondsCellArray","showTimeToMidnight","Date","now","nowSeconds","nowHours","getHours","nowMinutes","getMinutes","getSeconds","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","textContent","hoursToMidnight","String","err","e","f","_iterator2","_step2","minutesToMidnight","_iterator3","_step3","item","secondsToMidnight","setTimeout","sliderBlock","querySelector","sliderRow","arrowsBlock","widthSliderCell","clickHandler","event","leftCoordinate","Number","style","left","slice","dotsLiveCollection","dotActiveNowElement","numberActiveElementNow","Array","from","indexOf","nextNumberActiveElement","classList","remove","target","contains","length","add","addEventListener","_regeneratorRuntime","t","r","Object","prototype","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","h","Error","method","arg","delegate","maybeInvokeDelegate","TypeError","y","tryCatch","type","resultName","next","nextLoc","sent","_sent","dispatchException","abrupt","p","l","call","GeneratorFunction","GeneratorFunctionPrototype","d","this","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","callInvokeWithMethodAndArg","invoke","_typeof","resolve","__await","then","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","express","require","fetch","app","config","port","_ref","_callee","req","res","token","chatId","message","url","response","data","_context","process","PORT","TELEGRAM_TOKEN","json","env","TELEGRAM_CHAT_ID","body","error","headers","chat_id","text","ok","status","_x","_x2","listen","console","log"],"mappings":"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","file":"main.min.js","sourcesContent":["/**\r\n * TIMER\r\n */\r\nlet hoursCellArray = document.getElementsByClassName('hours');\r\nlet minutesCellArray = document.getElementsByClassName('minutes');\r\nlet secondsCellArray = document.getElementsByClassName('seconds');\r\n\r\nfunction showTimeToMidnight() {\r\n    let now = new Date();\r\n    let nowHours = now.getHours();\r\n    let nowMinutes = now.getMinutes();\r\n    let nowSeconds = now.getSeconds();\r\n\r\n    let hoursToMidnight = 0;\r\n    let minutesToMidnight = 0;\r\n    let secondsToMidnight = 0;\r\n\r\n    // Get hours to midnight\r\n    function getHoursToMidnight() {\r\n        if (nowMinutes === 0 && nowSeconds === 0) {\r\n            hoursToMidnight = 24 - nowHours;\r\n        } else {\r\n            hoursToMidnight = 23 - nowHours;\r\n        }\r\n        hoursToMidnight = String(hoursToMidnight);\r\n        return hoursToMidnight.length === 2 ? hoursToMidnight : '0' + hoursToMidnight;\r\n    }\r\n\r\n    // Get minutes to midnight\r\n    function getMinutesToMidnight() {\r\n        if (nowMinutes === 0 && nowSeconds === 0) {\r\n            minutesToMidnight = 0;\r\n        } else {\r\n            minutesToMidnight = 59 - nowMinutes;\r\n        }\r\n        minutesToMidnight = String(minutesToMidnight);\r\n        return minutesToMidnight.length === 2 ? minutesToMidnight : '0' + minutesToMidnight;\r\n    }\r\n\r\n    // Get seconds to midnight\r\n    function getSecondsToMidnight() {\r\n        if (nowSeconds === 0) {\r\n            secondsToMidnight = 0;\r\n        } else {\r\n            secondsToMidnight = 60 - nowSeconds;\r\n        }\r\n        secondsToMidnight = String(secondsToMidnight);\r\n        return secondsToMidnight.length === 2 ? secondsToMidnight : '0' + secondsToMidnight;\r\n    }\r\n\r\n    // Update timer cells\r\n    for (let item of hoursCellArray) {\r\n        item.textContent = getHoursToMidnight();\r\n    }\r\n    for (let item of minutesCellArray) {\r\n        item.textContent = getMinutesToMidnight();\r\n    }\r\n    for (let item of secondsCellArray) {\r\n        item.textContent = getSecondsToMidnight();\r\n    }\r\n    // console.log(`${getHoursToMidnight()}:${getMinutesToMidnight()}:${getSecondsToMidnight()}`);\r\n    setTimeout(showTimeToMidnight, 200);\r\n}\r\n\r\nshowTimeToMidnight();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// /**\r\n//  * \r\n//  * \r\n//  * - - - TELEGRAM BOT - - -\r\n//  * \r\n//  */\r\n// // import { TELEGRAM_BOT_TOKEN, TELEGRAM_CHAT_ID } from \"./telegbot-tok.js\";\r\n\r\n// // // Bot name - order processing\r\n// // // Username for bot - sadovShopBot\r\n// // // Name of group with bot - sadovShop\r\n\r\n// // // API - адрес куда посылаем запрос\r\n// // const API = `https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage`;\r\n\r\n// const API = `https://eco-shop-7jg7.onrender.com/sendMessage`;\r\n\r\n// async function sendEmailTelegram(event) {\r\n//     event.preventDefault();\r\n\r\n//     const form = event.target;\r\n//     const formBtn = document.querySelector('#form-order #order-button');\r\n//     // Оборачиваем в обёртку нашу форму\r\n//     const formData = new FormData(form);\r\n//     // Получаем данные в виде объекта\r\n//     const fromDataObject = Object.fromEntries(formData.entries());\r\n\r\n//     const {name, phone} = fromDataObject;\r\n//     const dataStrFromSite = `Ім'я покупця: ${name} \r\n// Номер телефона: ${phone}`;\r\n//     console.log(dataStrFromSite);\r\n\r\n//     try {\r\n//         formBtn.textContent = 'Не закривайте цю сторінку, доки надсилаються дані...'\r\n//         const response = await fetch(API, \r\n//             {\r\n//             method: 'POST',\r\n//             headers: {\r\n//                 'Content-Type': 'application/json'\r\n//             },\r\n//             body: JSON.stringify({\r\n//                 chat_id: TELEGRAM_CHAT_ID,\r\n//                 text: dataStrFromSite\r\n//             })\r\n//         }\r\n//     )\r\n//         if (response.ok){\r\n//             alert('Дякуємо! Ваше замовлення прийнято. Ми зв`яжемось з Вами найближчим часом.');\r\n//             // Чистим форму\r\n//             form.reset();\r\n//         } else {\r\n//             // Создаём ошибку и передаём её объект ответа с ошибкой.\r\n//             // Дальше эта ошибка перейдёт в блок catch(error) где её можно обработать\r\n//             throw new Error(response.statusText)\r\n//         }\r\n//     } catch (error) {\r\n//         console.error();\r\n//         alert('Нажаль ми не отримали Ваші дані. Будь-ласка, знову введіть Ваші дані та натисність на кноку \"ОФОРМИТИ ЗАМОВЛЕННЯ\".');\r\n//     } finally {\r\n//         formBtn.textContent = 'ОФОРМИТИ ЗАМОВЛЕННЯ';\r\n//     }\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n *  Код для render\r\n */\r\n// document.getElementById('form-order').addEventListener('submit', async (e) => {\r\n//     e.preventDefault();\r\n//     const message = document.getElementById('buyer-name').value;\r\n\r\n//     const response = await fetch('https://eco-shop-7jg7.onrender.com/sendMessage', { // замените на URL вашего Render приложения\r\n//         method: 'POST',\r\n//         headers: {\r\n//         'Content-Type': 'application/json',\r\n//         },\r\n//         body: JSON.stringify({ message }),\r\n//     });\r\n\r\n//     const result = await response.json();\r\n//     console.log(result);\r\n// });\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * \r\n * \r\n * - - - SLIDER - - -\r\n * \r\n * \r\n */\r\nlet sliderBlock = document.querySelector('.slider');\r\nlet sliderRow = document.querySelector('.slider__row');\r\nlet arrowsBlock = document.querySelector('.slider__arrows');\r\nlet widthSliderCell = 440;\r\nsliderRow.style.left = '-440px';\r\n\r\nfunction clickHandler(event) {\r\n    let leftCoordinate = Number(sliderRow.style.left.slice(0, -2))\r\n    let dotsLiveCollection = sliderBlock.getElementsByClassName('slider-dots__item');\r\n    let dotActiveNowElement = sliderBlock.getElementsByClassName('slider-dots__item_active')[0];\r\n    let numberActiveElementNow = Array.from(dotsLiveCollection).indexOf(dotActiveNowElement);\r\n    let nextNumberActiveElement = 0;\r\n\r\n    function removeActiveClass(acitveElement) {\r\n        acitveElement.classList.remove('slider-dots__item_active');\r\n    }\r\n\r\n    removeActiveClass(dotActiveNowElement);\r\n    // Processing click on left arrow\r\n    if (event.target.classList.contains('slider__arrows_left')) {\r\n        if (leftCoordinate === 0) {\r\n            nextNumberActiveElement = (dotsLiveCollection.length) - 1;\r\n            sliderRow.style.left = '-880px';\r\n        } else  {\r\n            nextNumberActiveElement = numberActiveElementNow - 1;\r\n            sliderRow.style.left = (leftCoordinate + widthSliderCell) + 'px';\r\n        }\r\n    }\r\n    // Processing click on right arrow\r\n    if (event.target.classList.contains('slider__arrows_right')) {\r\n        if (leftCoordinate === -880) {\r\n            sliderRow.style.left = '0px';\r\n            nextNumberActiveElement = 0;\r\n        } else  {\r\n            nextNumberActiveElement = numberActiveElementNow + 1;\r\n            sliderRow.style.left = (leftCoordinate - widthSliderCell) + 'px';\r\n        }\r\n    }\r\n    dotsLiveCollection[nextNumberActiveElement].classList.add('slider-dots__item_active');\r\n}\r\n\r\nsliderBlock.addEventListener('click', clickHandler);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * \r\n * \r\n * - - - FORM VALIDATION - - -\r\n * \r\n * \r\n */\r\n// let form = document.getElementById('form-order');\r\n\r\n\r\n// function validation(form) {\r\n//     let result = true;\r\n//     const arrInputs = form.querySelectorAll('input'); // array of input tags\r\n\r\n\r\n//     function removeError(input) {\r\n//         const parentOfInput = input.parentNode;\r\n//         if (parentOfInput.classList.contains('error')) {\r\n//             parentOfInput.querySelector('.error-label').remove();\r\n//             parentOfInput.classList.remove('error');\r\n//         }\r\n//     }\r\n    \r\n\r\n//     function createError(input, text) {\r\n//         const parentOfInput = input.parentNode;\r\n//         const errorLabel = document.createElement('label');\r\n//         errorLabel.classList.add('error-label');\r\n//         errorLabel.textContent = text + input.placeholder[0].toLowerCase() + input.placeholder.slice(1);\r\n        \r\n//         parentOfInput.classList.add('error');\r\n//         parentOfInput.append(errorLabel);\r\n//     }\r\n\r\n//     arrInputs.forEach( input => {\r\n//         removeError(input);\r\n\r\n//         if (input.value === '') {\r\n//             createError(input, 'Будь-ласка, ');\r\n//             result = false;\r\n//         }\r\n//     })\r\n\r\n//     return result;\r\n// }\r\n\r\n// function handlerForm(event) {\r\n//     event.preventDefault();\r\n//     // validation(this) // \"this\" - это тег form, форма которую мы обрабатываем\r\n//     alert('The form has been validated in HTML.')\r\n\r\n//     // if (validation(this) === true) {\r\n//     //     // Скорее всего в этом блоке нужно будет передавать данные в Телеграм\r\n//     //     alert('The form has been validated.');\r\n//     // }\r\n// }\r\n\r\n// form.addEventListener('submit', handlerForm);\r\n\r\n","const express = require('express');\r\nconst fetch = require('node-fetch');\r\nrequire('dotenv').config();\r\n\r\nconst app = express();\r\nconst port = process.env.PORT || 3000;\r\n\r\napp.use(express.json());\r\n\r\napp.post('/sendMessage', async (req, res) => {\r\n    const token = process.env.TELEGRAM_TOKEN;\r\n    const chatId = process.env.TELEGRAM_CHAT_ID;\r\n    const { message } = req.body;\r\n\r\n    if (!message) {\r\n        return res.status(400).json({ error: 'Message is required' });\r\n    }\r\n\r\n    const url = `https://api.telegram.org/bot${token}/sendMessage`;\r\n    const response = await fetch(url, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n            chat_id: chatId,\r\n            text: message,\r\n        }),\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (!response.ok) {\r\n        return res.status(response.status).json(data);\r\n    }\r\n\r\n    res.status(200).json(data);\r\n});\r\n\r\napp.listen(port, () => {\r\n    console.log(`Server is running on port ${port}`);\r\n});\r\n"]}