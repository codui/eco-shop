{"version":3,"sources":["main.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","h","f","Error","s","done","method","arg","delegate","maybeInvokeDelegate","TypeError","y","tryCatch","type","resultName","next","nextLoc","sent","_sent","dispatchException","abrupt","p","l","call","GeneratorFunction","GeneratorFunctionPrototype","d","this","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","callInvokeWithMethodAndArg","invoke","_typeof","resolve","__await","then","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","_createForOfIteratorHelper","_n","Array","isArray","_unsupportedIterableToArray","F","_arrayLikeToArray","toString","from","test","hoursCellArray","document","getElementsByClassName","minutesCellArray","secondsCellArray","now","nowHours","getHours","nowMinutes","getMinutes","nowSeconds","getSeconds","secondsToMidnight","_iterator","_step","textContent","hoursToMidnight","String","_step2","_iterator2","minutesToMidnight","err","_step3","_iterator3","setTimeout","showTimeToMidnight","sliderBlock","querySelector","arrowsBlock","clickHandler","event","leftCoordinate","Number","sliderRow","style","left","dotsLiveCollection","dotActiveNowElement","numberActiveElementNow","indexOf","nextNumberActiveElement","contains","removeActiveClass","acitveElement","widthSliderCell","target","classList","add","sendEmailTelegram","_x","_sendEmailTelegram","_callee2","fetch","app","port","form","formBtn","phone","dataStrFromSite","_context2","preventDefault","express","require","config","process","env","PORT","use","json","formData","FormData","fromDataObject","fromEntries","entries","concat","post","_ref","_callee","req","res","url","response","_context","token","TELEGRAM_TOKEN","TELEGRAM_CHAT_ID","Content-Type","body","JSON","chat_id","text","ok","alert","chatId","_x2","_x3","error","console","listen","log"],"mappings":"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","file":"main.min.js","sourcesContent":["/**\r\n * TIMER\r\n */\r\nlet hoursCellArray = document.getElementsByClassName('hours');\r\nlet minutesCellArray = document.getElementsByClassName('minutes');\r\nlet secondsCellArray = document.getElementsByClassName('seconds');\r\n\r\nfunction showTimeToMidnight() {\r\n    let now = new Date();\r\n    let nowHours = now.getHours();\r\n    let nowMinutes = now.getMinutes();\r\n    let nowSeconds = now.getSeconds();\r\n\r\n    let hoursToMidnight = 0;\r\n    let minutesToMidnight = 0;\r\n    let secondsToMidnight = 0;\r\n\r\n    // Get hours to midnight\r\n    function getHoursToMidnight() {\r\n        if (nowMinutes === 0 && nowSeconds === 0) {\r\n            hoursToMidnight = 24 - nowHours;\r\n        } else {\r\n            hoursToMidnight = 23 - nowHours;\r\n        }\r\n        hoursToMidnight = String(hoursToMidnight);\r\n        return hoursToMidnight.length === 2 ? hoursToMidnight : '0' + hoursToMidnight;\r\n    }\r\n\r\n    // Get minutes to midnight\r\n    function getMinutesToMidnight() {\r\n        if (nowMinutes === 0 && nowSeconds === 0) {\r\n            minutesToMidnight = 0;\r\n        } else {\r\n            minutesToMidnight = 59 - nowMinutes;\r\n        }\r\n        minutesToMidnight = String(minutesToMidnight);\r\n        return minutesToMidnight.length === 2 ? minutesToMidnight : '0' + minutesToMidnight;\r\n    }\r\n\r\n    // Get seconds to midnight\r\n    function getSecondsToMidnight() {\r\n        if (nowSeconds === 0) {\r\n            secondsToMidnight = 0;\r\n        } else {\r\n            secondsToMidnight = 60 - nowSeconds;\r\n        }\r\n        secondsToMidnight = String(secondsToMidnight);\r\n        return secondsToMidnight.length === 2 ? secondsToMidnight : '0' + secondsToMidnight;\r\n    }\r\n\r\n    // Update timer cells\r\n    for (let item of hoursCellArray) {\r\n        item.textContent = getHoursToMidnight();\r\n    }\r\n    for (let item of minutesCellArray) {\r\n        item.textContent = getMinutesToMidnight();\r\n    }\r\n    for (let item of secondsCellArray) {\r\n        item.textContent = getSecondsToMidnight();\r\n    }\r\n    // console.log(`${getHoursToMidnight()}:${getMinutesToMidnight()}:${getSecondsToMidnight()}`);\r\n    setTimeout(showTimeToMidnight, 200);\r\n}\r\n\r\nshowTimeToMidnight();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * \r\n * \r\n * - - - SLIDER - - -\r\n * \r\n * \r\n */\r\nlet sliderBlock = document.querySelector('.slider');\r\nlet sliderRow = document.querySelector('.slider__row');\r\nlet arrowsBlock = document.querySelector('.slider__arrows');\r\nlet widthSliderCell = 440;\r\nsliderRow.style.left = '-440px';\r\n\r\nfunction clickHandler(event) {\r\n    let leftCoordinate = Number(sliderRow.style.left.slice(0, -2))\r\n    let dotsLiveCollection = sliderBlock.getElementsByClassName('slider-dots__item');\r\n    let dotActiveNowElement = sliderBlock.getElementsByClassName('slider-dots__item_active')[0];\r\n    let numberActiveElementNow = Array.from(dotsLiveCollection).indexOf(dotActiveNowElement);\r\n    let nextNumberActiveElement = 0;\r\n\r\n    function removeActiveClass(acitveElement) {\r\n        acitveElement.classList.remove('slider-dots__item_active');\r\n    }\r\n\r\n    removeActiveClass(dotActiveNowElement);\r\n    // Processing click on left arrow\r\n    if (event.target.classList.contains('slider__arrows_left')) {\r\n        if (leftCoordinate === 0) {\r\n            nextNumberActiveElement = (dotsLiveCollection.length) - 1;\r\n            sliderRow.style.left = '-880px';\r\n        } else  {\r\n            nextNumberActiveElement = numberActiveElementNow - 1;\r\n            sliderRow.style.left = (leftCoordinate + widthSliderCell) + 'px';\r\n        }\r\n    }\r\n    // Processing click on right arrow\r\n    if (event.target.classList.contains('slider__arrows_right')) {\r\n        if (leftCoordinate === -880) {\r\n            sliderRow.style.left = '0px';\r\n            nextNumberActiveElement = 0;\r\n        } else  {\r\n            nextNumberActiveElement = numberActiveElementNow + 1;\r\n            sliderRow.style.left = (leftCoordinate - widthSliderCell) + 'px';\r\n        }\r\n    }\r\n    dotsLiveCollection[nextNumberActiveElement].classList.add('slider-dots__item_active');\r\n}\r\n\r\nsliderBlock.addEventListener('click', clickHandler);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nasync function sendEmailTelegram(event) {\r\n    event.preventDefault();\r\n\r\n    const express = require('express');\r\n    const fetch = require('node-fetch');\r\n    require('dotenv').config();\r\n    const app = express();\r\n    const port = process.env.PORT || 3000;\r\n\r\n    app.use(express.json());\r\n\r\n    const form = event.target;\r\n    const formBtn = document.querySelector('#form-order #order-button');\r\n    // Оборачиваем в обёртку нашу форму\r\n    const formData = new FormData(form);\r\n    // Получаем данные в виде объекта\r\n    const fromDataObject = Object.fromEntries(formData.entries());\r\n\r\n    const { name, phone } = fromDataObject;\r\n    const dataStrFromSite = `Ім'я покупця: ${name} Номер телефона: ${phone}`;\r\n\r\n    try {\r\n        formBtn.textContent = 'Не закривайте цю сторінку, доки надсилаються дані...'\r\n\r\n        app.post('/sendMessage', async (req, res) => {\r\n            const token = process.env.TELEGRAM_TOKEN;\r\n            const chatId = process.env.TELEGRAM_CHAT_ID;\r\n            // const { message } = req.body;\r\n\r\n            // if (!message) {\r\n            //     return res.status(400).json({ error: 'Message is required' });\r\n            // }\r\n\r\n            const url = `https://api.telegram.org/bot${token}/sendMessage`;\r\n            const response = await fetch(url,\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/json' },\r\n                    body: JSON.stringify({\r\n                        chat_id: TELEGRAM_CHAT_ID,\r\n                        text: dataStrFromSite\r\n                    })\r\n                }\r\n            );\r\n            \r\n            if (response.ok) {\r\n                alert('Дякуємо! Ваше замовлення прийнято. Ми зв`яжемось з Вами найближчим часом.');\r\n                // Чистим форму\r\n                form.reset();\r\n            } else {\r\n                // Создаём ошибку и передаём её объект ответа с ошибкой.\r\n                // Дальше эта ошибка перейдёт в блок catch(error) где её можно обработать\r\n                throw new Error(response.statusText)\r\n            }\r\n        });\r\n    } catch (error) {\r\n        console.error();\r\n        alert('Нажаль ми не отримали Ваші дані. Будь-ласка, знову введіть Ваші дані та натисність на кноку \"ОФОРМИТИ ЗАМОВЛЕННЯ\".');\r\n    } finally {\r\n        formBtn.textContent = 'ОФОРМИТИ ЗАМОВЛЕННЯ';\r\n    }\r\n\r\n    app.listen(port, () => {\r\n        console.log(`Server is running on port ${port}`);\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * \r\n * \r\n * - - - FORM VALIDATION - - -\r\n * \r\n * \r\n */\r\n// let form = document.getElementById('form-order');\r\n\r\n\r\n// function validation(form) {\r\n//     let result = true;\r\n//     const arrInputs = form.querySelectorAll('input'); // array of input tags\r\n\r\n\r\n//     function removeError(input) {\r\n//         const parentOfInput = input.parentNode;\r\n//         if (parentOfInput.classList.contains('error')) {\r\n//             parentOfInput.querySelector('.error-label').remove();\r\n//             parentOfInput.classList.remove('error');\r\n//         }\r\n//     }\r\n    \r\n\r\n//     function createError(input, text) {\r\n//         const parentOfInput = input.parentNode;\r\n//         const errorLabel = document.createElement('label');\r\n//         errorLabel.classList.add('error-label');\r\n//         errorLabel.textContent = text + input.placeholder[0].toLowerCase() + input.placeholder.slice(1);\r\n        \r\n//         parentOfInput.classList.add('error');\r\n//         parentOfInput.append(errorLabel);\r\n//     }\r\n\r\n//     arrInputs.forEach( input => {\r\n//         removeError(input);\r\n\r\n//         if (input.value === '') {\r\n//             createError(input, 'Будь-ласка, ');\r\n//             result = false;\r\n//         }\r\n//     })\r\n\r\n//     return result;\r\n// }\r\n\r\n// function handlerForm(event) {\r\n//     event.preventDefault();\r\n//     // validation(this) // \"this\" - это тег form, форма которую мы обрабатываем\r\n//     alert('The form has been validated in HTML.')\r\n\r\n//     // if (validation(this) === true) {\r\n//     //     // Скорее всего в этом блоке нужно будет передавать данные в Телеграм\r\n//     //     alert('The form has been validated.');\r\n//     // }\r\n// }\r\n\r\n// form.addEventListener('submit', handlerForm);\r\n\r\n"]}